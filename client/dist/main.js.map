{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.service.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/entities/movie.actions.ts","webpack:///./src/app/entities/movie.reducer.ts","webpack:///./src/app/entities/movie.selectors.ts","webpack:///./src/app/entities/movies-api.actions.ts","webpack:///./src/app/entities/movies-api.effects.ts","webpack:///./src/app/entities/movies-api.reducer.ts","webpack:///./src/app/message.service.ts","webpack:///./src/app/messages/messages.component.css","webpack:///./src/app/messages/messages.component.html","webpack:///./src/app/messages/messages.component.ts","webpack:///./src/app/movie-detail/movie-detail.component.css","webpack:///./src/app/movie-detail/movie-detail.component.html","webpack:///./src/app/movie-detail/movie-detail.component.ts","webpack:///./src/app/movie.service.ts","webpack:///./src/app/movies/movies.component.css","webpack:///./src/app/movies/movies.component.html","webpack:///./src/app/movies/movies.component.ts","webpack:///./src/app/omimage/omimage.component.css","webpack:///./src/app/omimage/omimage.component.html","webpack:///./src/app/omimage/omimage.component.ts","webpack:///./src/app/omsubimage/omsubimage.component.css","webpack:///./src/app/omsubimage/omsubimage.component.html","webpack:///./src/app/omsubimage/omsubimage.component.ts","webpack:///./src/app/reducers/index.ts","webpack:///./src/app/sse.service.ts","webpack:///./src/app/stripes-overlay/stripes-overlay.component.css","webpack:///./src/app/stripes-overlay/stripes-overlay.component.html","webpack:///./src/app/stripes-overlay/stripes-overlay.component.ts","webpack:///./src/app/stripes/stripes.component.css","webpack:///./src/app/stripes/stripes.component.html","webpack:///./src/app/stripes/stripes.component.ts","webpack:///./src/app/syncstore.service.ts","webpack:///./src/app/task/task-api.actions.ts","webpack:///./src/app/task/task-api.effects.ts","webpack:///./src/app/task/task-api.reducer.ts","webpack:///./src/app/task/task-list/task-list.component.css","webpack:///./src/app/task/task-list/task-list.component.html","webpack:///./src/app/task/task-list/task-list.component.ts","webpack:///./src/app/task/task.actions.ts","webpack:///./src/app/task/task.module.ts","webpack:///./src/app/task/task.reducer.ts","webpack:///./src/app/task/task.selectors.ts","webpack:///./src/app/task/task.state.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;ACZqD;AACE;AACU;AACM;AACO;AAEP;AAEvE,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,wEAAe,EAAE;IAC9C,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qFAAiB,EAAE;IAC/C,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,iFAAkB,EAAE;IACpD,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,YAAY,EAAE,SAAS,EAAE,MAAM,EAAE;IACzD,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,yFAAoB,EAAE;CACxD,CAAC;AAOF;IAAA;IAA+B,CAAC;IAAnB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAE,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAE;YACzC,OAAO,EAAE,CAAE,4DAAY,CAAE;SAC1B,CAAC;OACW,gBAAgB,CAAG;IAAD,uBAAC;CAAA;AAAH;;;;;;;;;;;;ACrB7B,wBAAwB,qBAAqB,gBAAgB,qBAAqB,GAAG,MAAM,mBAAmB,kBAAkB,mBAAmB,GAAG,SAAS,sBAAsB,0BAA0B,qBAAqB,0BAA0B,2BAA2B,uBAAuB,GAAG,yBAAyB,mBAAmB,GAAG,eAAe,mBAAmB,8BAA8B,GAAG,gBAAgB,mBAAmB,GAAG,iBAAiB,+BAA+B,sBAAsB,GAAG,+CAA+C,+uC;;;;;;;;;;;ACAnkB,+tE;;;;;;;;;;;;;;;;;;;ACAgD;AACP;AACA;AASzC;IAIE,sBAAoB,UAAsB,EACtB,MAAc;QADd,eAAU,GAAV,UAAU,CAAY;QACtB,WAAM,GAAN,MAAM,CAAQ;QAJlC,UAAK,GAAG,aAAa,CAAC;IAKtB,CAAC;IAED,+BAAQ,GAAR;QAAA,iBAEC;QADC,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,EAAtB,CAAsB,CAAC,CAAC;IACxE,CAAC;IAED,oCAAa,GAAb;QACE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;IACvC,CAAC;IAED,gCAAS,GAAT;QACE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;IACtC,CAAC;IAlBU,YAAY;QAPxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;+EAOgC,uDAAU;YACd,sDAAM;OALvB,YAAY,CAqBxB;IAAD,mBAAC;CAAA;AArBwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXgC;AACjB;AACI;AACW;AAGT;AACJ;AACkB;AACiB;AACX;AACV;AACa;AACU;AAChB;AACuB;AACd;AACT;AAEiB;AAEhF,QAAQ;AACmD;AACjB;AACI;AACR;AAE0B;AAKhE,WAAW;AACyC;AACG;AACP;AACE;AACF;AAEhD,QAAQ;AAEsC;AAyC9C;IAAA;IACA,CAAC;IADY,SAAS;QAtCrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,wEAAe;gBACf,yFAAoB;gBACpB,8EAAiB;gBACjB,kFAAkB;gBAClB,4EAAgB;gBAChB,mGAAuB;gBACvB,qFAAmB;gBACnB,4EAAgB;aACjB;YAED,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;gBACX,qEAAgB;gBAChB,qEAAgB;gBAChB,6FAAuB;gBACvB,oEAAiB;gBACjB,uEAAc;gBACd,gEAAa;gBACb,kEAAe;gBACf,gEAAa;gBACb,6DAAU;gBACV,wDAAW,CAAC,OAAO,CAAC,mDAAQ,CAAC;gBAC7B,yEAAmB,CAAC,UAAU,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC;gBAC9C,4DAAa,CAAC,OAAO,CAAC,EAAE,CAAC;gBACzB,4DAAa,CAAC,UAAU,CAAC,CAAC,6EAAe,CAAC,CAAC;gBAC3C,+EAA2B,CAAC,OAAO,EAAE;aACpC;YAEH,OAAO,EAAE,CAAE,oEAAiB,EAAE,gEAAa,EAAE,gEAAa,CAAE;YAE5D,SAAS,EAAE,CAAC,uDAAU,CAAC;YACvB,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OAEW,SAAS,CACrB;IAAD,gBAAC;CAAA;AADqB;;;;;;;;;;;;;;;;;;;;;;;AClF2B;AACP;AAIE;AAMqB;AACN;AAMJ;AAKvD;IAIE,oBAAqB,IAAgB,EAChB,SAA2B,EAC3B,KAAsB;QAFtB,SAAI,GAAJ,IAAI,CAAY;QAChB,cAAS,GAAT,SAAS,CAAkB;QAC3B,UAAK,GAAL,KAAK,CAAiB;IAC3C,CAAC;IAED,8BAAS,GAAT;QACE,OAAO,CAAC,GAAG,CAAE,0BAA0B,CAAC,CAAC;QACzC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,uEAA0B,EAAG,CAAC,CAAC;QACvD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,gEAAyB,EAAG,CAAC,CAAC;QACxD,+CAA+C;QAC7C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IACpC,CAAC;IAfU,UAAU;QADtB,gEAAU,EAAE;+EAKgB,+DAAU;YACL,mEAAgB;YACpB,iDAAK;OANtB,UAAU,CAkBtB;IAAD,iBAAC;CAAA;AAlBsB;;;;;;;;;;;;ACvBvB,kFAAkF,gBAAgB,wBAAwB,yBAAyB,GAAG,gCAAgC,qBAAqB,GAAG,UAAU,kBAAkB,OAAO,KAAK,0BAA0B,GAAG,wBAAwB,2BAA2B,GAAG,MAAM,uBAAuB,qBAAqB,GAAG,MAAM,uBAAuB,GAAG,SAAS,gBAAgB,GAAG,YAAY,eAAe,GAAG,WAAW,kBAAkB,uBAAuB,gBAAgB,sBAAsB,qBAAqB,8BAA8B,uBAAuB,wBAAwB,GAAG,iBAAiB,2BAA2B,oBAAoB,mBAAmB,GAAG,aAAa,sBAAsB,GAAG,4CAA4C,wBAAwB,GAAG,6BAA6B,aAAa,sBAAsB,uBAAuB,EAAE,GAAG,8BAA8B,WAAW,gBAAgB,KAAK,aAAa,sBAAsB,KAAK,GAAG,+CAA+C,24E;;;;;;;;;;;ACA9kC,sLAAsL,UAAU,mDAAmD,YAAY,gD;;;;;;;;;;;;;;;;;;;;ACA7M;AACN;AAGI;AAEc;AAS9D;IAIE,4BAAoB,YAA0B,EACzB,KAAsB;QADvB,iBAAY,GAAZ,YAAY,CAAc;QACzB,UAAK,GAAL,KAAK,CAAiB;QAH3C,YAAO,GAAwB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,0DAAM,CAAC,yEAAe,CAAC,CAAC;IAGvB,CAAC;IAEjD,qCAAQ,GAAR;IACA,CAAC;IARU,kBAAkB;QAN9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,+GAAyC;;SAE1C,CAAC;+EAMkC,2DAAY;YAClB,iDAAK;OALtB,kBAAkB,CAW9B;IAAD,yBAAC;CAAA;AAX8B;;;;;;;;;;;;;ACX/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAY,gBAWX;AAXD,WAAY,gBAAgB;IAC1B,sDAAoC;IACpC,kDAAkC;IAClC,wDAAqC;IACrC,oDAAmC;IACnC,0DAAsC;IACtC,wDAAqC;IACrC,0DAAsC;IACtC,wDAAqC;IACrC,0DAAsC;IACtC,wDAAqC;AACvC,CAAC,EAXW,gBAAgB,KAAhB,gBAAgB,QAW3B;AAED;IAGE,oBAAmB,OAA4B;QAA5B,YAAO,GAAP,OAAO,CAAqB;QAFtC,SAAI,GAAG,gBAAgB,CAAC,UAAU,CAAC;IAEM,CAAC;IACrD,iBAAC;AAAD,CAAC;;AAED;IAGE,kBAAmB,OAAyB;QAAzB,YAAO,GAAP,OAAO,CAAkB;QAFnC,SAAI,GAAG,gBAAgB,CAAC,QAAQ,CAAC;IAEK,CAAC;IAClD,eAAC;AAAD,CAAC;;AAED;IAGE,qBAAmB,OAAyB;QAAzB,YAAO,GAAP,OAAO,CAAkB;QAFnC,SAAI,GAAG,gBAAgB,CAAC,WAAW,CAAC;IAEE,CAAC;IAClD,kBAAC;AAAD,CAAC;;AAED;IAGE,mBAAmB,OAA4B;QAA5B,YAAO,GAAP,OAAO,CAAqB;QAFtC,SAAI,GAAG,gBAAgB,CAAC,SAAS,CAAC;IAEO,CAAC;IACrD,gBAAC;AAAD,CAAC;;AAED;IAGE,sBAAmB,OAA4B;QAA5B,YAAO,GAAP,OAAO,CAAqB;QAFtC,SAAI,GAAG,gBAAgB,CAAC,YAAY,CAAC;IAEI,CAAC;IACrD,mBAAC;AAAD,CAAC;;AAED;IAGE,qBAAmB,OAAiC;QAAjC,YAAO,GAAP,OAAO,CAA0B;QAF3C,SAAI,GAAG,gBAAgB,CAAC,WAAW,CAAC;IAEU,CAAC;IAC1D,kBAAC;AAAD,CAAC;;AAED;IAGE,sBAAmB,OAAoC;QAApC,YAAO,GAAP,OAAO,CAA6B;QAF9C,SAAI,GAAG,gBAAgB,CAAC,YAAY,CAAC;IAEY,CAAC;IAC7D,mBAAC;AAAD,CAAC;;AAED;IAGE,qBAAmB,OAAuB;QAAvB,YAAO,GAAP,OAAO,CAAgB;QAFjC,SAAI,GAAG,gBAAgB,CAAC,WAAW,CAAC;IAEA,CAAC;IAChD,kBAAC;AAAD,CAAC;;AAED;IAGE,sBAAmB,OAA0B;QAA1B,YAAO,GAAP,OAAO,CAAmB;QAFpC,SAAI,GAAG,gBAAgB,CAAC,YAAY,CAAC;IAEE,CAAC;IACnD,mBAAC;AAAD,CAAC;;AAED;IAAA;QACW,SAAI,GAAG,gBAAgB,CAAC,WAAW,CAAC;IAC/C,CAAC;IAAD,kBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;ACzE8E;AAEd;AAQjE,SAAS,aAAa,CAAC,EAAS,EAAE,EAAS;IACzC,OAAO,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC;AACvB,CAAC;AAGM,IAAM,OAAO,GAAyB,wEAAmB,CAC9D;IACE,YAAY,EAAE,aAAa;CAC5B,CACF,CAAC;AAEK,IAAM,YAAY,GAAU,OAAO,CAAC,eAAe,CAAC;AACzD,qCAAqC;CACtC,CAAC,CAAC;AAEI,SAAS,OAAO,CACrB,KAAoB,EACpB,MAAoB;IADpB,4CAAoB;IAGpB,QAAQ,MAAM,CAAC,IAAI,EAAE;QAEnB,KAAK,+DAAgB,CAAC,QAAQ,CAAC,CAAC;YAC9B,OAAO,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;SACpD;QAED,KAAK,+DAAgB,CAAC,WAAW,CAAC,CAAC;YACjC,OAAO,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;SACvD;QAED,KAAK,+DAAgB,CAAC,SAAS,CAAC,CAAC;YAC/B,OAAO,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;SACtD;QAED,KAAK,+DAAgB,CAAC,YAAY,CAAC,CAAC;YAClC,OAAO,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;SACzD;QAED,KAAK,+DAAgB,CAAC,WAAW,CAAC,CAAC;YACjC,IAAM,EAAE,GAAG,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;YAC1D,OAAO,EAAE,CAAC;SACX;QAED,KAAK,+DAAgB,CAAC,YAAY,CAAC,CAAC;YAClC,OAAO,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;SACzD;QAED,KAAK,+DAAgB,CAAC,WAAW,CAAC,CAAC;YACjC,OAAO,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;SACpD;QAED,KAAK,+DAAgB,CAAC,YAAY,CAAC,CAAC;YAClC,OAAO,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;SACtD;QAED,KAAK,+DAAgB,CAAC,UAAU,CAAC,CAAC;YAChC,OAAO,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;SACrD;QAED,KAAK,+DAAgB,CAAC,WAAW,CAAC,CAAC;YACjC,OAAO,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;SACjC;QAED,OAAO,CAAC,CAAC;YACP,OAAO,KAAK,CAAC;SACd;KACF;AACH,CAAC;AAGC,2DAAS,EACT,kCAAc,EACd,wBAAS,EACT,4BAAW,CACc;;;;;;;;;;;;;ACnF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AACH;AAIpC,8EAAsD,EAApD,kCAAc,EAAE,wBAAoC,CAAC;AAGtD,IAAM,gBAAgB,GAAG,UAAC,KAAe,IAAK,YAAK,CAAC,MAAM,EAAZ,CAAY,CAAC;AAE3D,IAAM,eAAe,GAAI,kEAAc,CAC5C,gBAAgB,EAChB,SAAS,CAAC,CAAC;AAEJ,IAAM,oBAAoB,GAAG,kEAAc,CAChD,gBAAgB,EAChB,cAAc,CAAC,CAAC;AAEb,IAAM,WAAW,GAAG,kEAAc,CACvC,oBAAoB,EACpB,eAAK,IAAI,iBAAC,EAAU,IAAK,YAAK,CAAC,EAAE,CAAC,EAAT,CAAS,EAAzB,CAAyB,CACnC,CAAC;;;;;;;;;;;;;ACjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAY,oBAQX;AARD,WAAY,oBAAoB;IAC9B,+DAA6C;IAC7C,6EAAqD;IACrD,0EAAmD;IACnD,2DAA2C;IAC3C,mEAA6C;IAC7C,gEAA2C;IAC3C,6DAA4C;AAC9C,CAAC,EARW,oBAAoB,KAApB,oBAAoB,QAQ/B;AAED;IAAA;QACW,SAAI,GAAG,oBAAoB,CAAC,UAAU,CAAC;IAClD,CAAC;IAAD,iBAAC;AAAD,CAAC;;AAED;IAAA;QACW,SAAI,GAAG,oBAAoB,CAAC,gBAAgB,CAAC;IACxD,CAAC;IAAD,uBAAC;AAAD,CAAC;;AAED;IAAA;QACW,SAAI,GAAG,oBAAoB,CAAC,eAAe,CAAC;IACvD,CAAC;IAAD,sBAAC;AAAD,CAAC;;AAED;IAAA;QACW,SAAI,GAAG,oBAAoB,CAAC,QAAQ,CAAC;IAChD,CAAC;IAAD,eAAC;AAAD,CAAC;;AAED;IAAA;QACW,SAAI,GAAG,oBAAoB,CAAC,cAAc,CAAC;IACtD,CAAC;IAAD,qBAAC;AAAD,CAAC;;AAED;IAAA;QACW,SAAI,GAAG,oBAAoB,CAAC,aAAa,CAAC;IACrD,CAAC;IAAD,oBAAC;AAAD,CAAC;;AAED;IAEE,mBAAmB,OAAiC;QAAjC,YAAO,GAAP,OAAO,CAA0B;QAD3C,SAAI,GAAG,oBAAoB,CAAC,SAAS,CAAC;IACQ,CAAC;IAC1D,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;ACzC0C;AACC;AACK;AACO;AAC6B;AAC/C;AAIU;AACG;AAMnD;IA8BE,yBACW,IAAgB,EAChB,QAAiB,EACjB,KAAsB;QAHjC,iBAKC;QAJU,SAAI,GAAJ,IAAI,CAAY;QAChB,aAAQ,GAAR,QAAQ,CAAS;QACjB,UAAK,GAAL,KAAK,CAAiB;QA/BzB,aAAQ,GAAG,aAAa,CAAC,CAAE,iBAAiB;QAGpD,gBAAW,GAAG,IAAI,CAAC,QAAQ;aAC1B,IAAI,CACH,4DAAM,CAAC,wEAA+B,CAAC,UAAU,CAAC,EAClD,+DAAQ,CAAC,cAAM,YAAI,CAAC,IAAI,CAAC,GAAG,CAAU,KAAI,CAAC,QAAQ,CAAC;aACjD,IAAI,CAEH,0DAAG,CAAE,gBAAM,IAAI,QAAC,IAAI,yDAAuB,CAAE,EAAC,MAAM,EAAE,MAAM,EAAC,CAAC,CAAC,EAAhD,CAAgD,CAAE,EACjE,iEAAU,CAAC,cAAM,sDAAE,CAAC,EAAE,IAAI,EAAE,6BAA6B,EAAE,CAAC,EAA3C,CAA2C,CAAC,EAC7D,+DAAQ,CAAC,cAAM,YAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,oEAA2B,EAAG,CAAC,EAAvD,CAAuD,CAAC,CACxE,EANY,CAMZ,CAEF,CACF,CAAC;QAGF,eAAU,GAAG,IAAI,CAAC,QAAQ;aACzB,IAAI,CACH,4DAAM,CAAuB,wEAA+B,CAAC,SAAS,CAAC;QAC3E,sDAAsD;QAClD,gEAAS,CAAE,oBAAU,IAAI;YACvB,IAAI,0DAAwB,CAAE,EAAC,KAAK,EAAE,UAAU,CAAC,OAAO,CAAC,KAAK,EAAC,CAAE;SAClE,EAFwB,CAExB,CAAC,CACH,CAAC;IAQF,CAAC;IA9BD;QADC,4DAAM,EAAE;;wDAaP;IAGF;QADC,4DAAM,EAAE;;uDAQP;IA3BS,eAAe;QAD3B,gEAAU,EAAE;+EAgCM,+DAAU;YACN,qDAAO;YACV,iDAAK;OAjCZ,eAAe,CAoC3B;IAAD,sBAAC;CAAA;AApC2B;;;;;;;;;;;;;ACf5B;AAAA;AAAA;AAAA;AAA8E;AAUvE,IAAM,YAAY,GAAU;IACjC,OAAO,EAAE,KAAK;IACd,KAAK,EAAE,IAAI;CACZ,CAAC;AAEK,SAAS,OAAO,CACrB,KAAoB,EACpB,MAAwB;IADxB,4CAAoB;IAGpB,QAAQ,MAAM,CAAC,IAAI,EAAE;QAEnB,KAAK,wEAAoB,CAAC,UAAU,CAAC,CAAC;YACpC,OAAO,CAAC,GAAG,CAAE,iCAAiC,CAAC,CAAC;YAChD,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE,EAAC,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAC,CAAC,CAAC;SAC/D;QACD,KAAK,wEAAoB,CAAC,gBAAgB,CAAC,CAAC;YAC1C,OAAO,CAAC,GAAG,CAAE,uCAAuC,CAAC,CAAC;YACtD,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE,EAAC,OAAO,EAAE,KAAK,EAAC,CAAC,CAAC;SACnD;QACD,KAAK,wEAAoB,CAAC,eAAe,CAAC,CAAC;YACzC,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE,EAAC,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAC,CAAC,CAAC;SACnE;QAED;YACE,OAAO,KAAK,CAAC;KAChB;AACH,CAAC;;;;;;;;;;;;;;;;;;ACrC0C;AAK3C;IAHA;QAIE,aAAQ,GAAa,EAAE,CAAC;IAS1B,CAAC;IAPC,4BAAG,GAAH,UAAI,OAAe;QACjB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;IAED,8BAAK,GAAL;QACE,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACrB,CAAC;IATU,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;OACW,cAAc,CAU1B;IAAD,qBAAC;CAAA;AAV0B;;;;;;;;;;;;ACL3B,+DAA+D,mJ;;;;;;;;;;;ACA/D,6OAA6O,SAAS,iB;;;;;;;;;;;;;;;;;;ACApM;AACE;AAOpD;IAEE,2BAAmB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;IAAI,CAAC;IAEtD,oCAAQ,GAAR;IACA,CAAC;IALU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,4GAAwC;;SAEzC,CAAC;+EAGmC,+DAAc;OAFtC,iBAAiB,CAO7B;IAAD,wBAAC;CAAA;AAP6B;;;;;;;;;;;;ACR9B,wBAAwB,oBAAoB,GAAG,aAAa,oBAAoB,GAAG,WAAW,4BAA4B,iBAAiB,qBAAqB,qBAAqB,wBAAwB,KAAK,WAAW,kBAAkB,kBAAkB,qBAAqB,yBAAyB,KAAK,YAAY,uBAAuB,yBAAyB,6BAA6B,mBAAmB,wBAAwB,yBAAyB,sBAAsB,cAAc,KAAK,kBAAkB,gCAAgC,KAAK,qBAAqB,6BAA6B,kBAAkB,mBAAmB,KAAK,+CAA+C,uhD;;;;;;;;;;;ACA5rB,2EAA2E,yBAAyB,wBAAwB,0BAA0B,4BAA4B,kCAAkC,KAAK,SAAS,+BAA+B,KAAK,ga;;;;;;;;;;;;;;;;;;;;;;;ACAlM;AACnB;AACN;AAKqC;AAEpC;AAOqD;AACjD;AAuBhD;IASE,8BACW,KAAqB,EACrB,YAA0B,EAC1B,QAAkB,EAClB,KAAsB;QAHtB,UAAK,GAAL,KAAK,CAAgB;QACrB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,aAAQ,GAAR,QAAQ,CAAU;QAClB,UAAK,GAAL,KAAK,CAAiB;QATjC,YAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,0DAAM,CAAC,qEAAW,CAAC,CAAC,CAAC;IASV,CAAC;IAEtC,0CAAW,GAAX;IACA,CAAC;IAED,uCAAQ,GAAR;QAAA,iBASC;QARF,gEAAgE;QAC7D,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;QAClE,kDAAkD;QAGlD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CACtD,0DAAG,CAAG,cAAI,IAAI,YAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,EAAnC,CAAmC,CAAC,CAC/C,CAAC;IACN,CAAC;IAED,uDAAwB,GAAxB,UAA0B,IAAW;QACnC,IAAM,IAAI,GAAc,EAAE,CAAC;QAC3B,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,KAAgB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,EAAE;YAAjB,IAAM,CAAC;YACV,IAAM,EAAE,GAAY,EAAC,EAAE,EAAE,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC;YAC9D,IAAI,CAAC,IAAI,CAAE,EAAE,CAAC,CAAC;YACf,sBAAsB;YACtB,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC;YACb,CAAC,IAAI,CAAC,CAAC;SACR;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,0CAAW,GAAX,UAAa,KAAY;QACvB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,OAAO,CAAC,GAAG,CAAC,wDAAwD,CAAC,CAAC;QACtE,OAAO,CAAC,GAAG,CAAE,KAAK,CAAC,CAAC;QACpB,OAAO,CAAC,GAAG,CAAE,KAAK,CAAC,YAAY,CAAC,CAAC;IACnC,CAAC;IAGD,qCAAM,GAAN;QACI,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACzB,CAAC;IAED,6CAAc,GAAd;QAAA,iBAQC;QAPC,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;QACjD,IAAI,CAAC,KAAK,CAAC,IAAI,CACb,2DAAI,CAAC,CAAC,CAAC,EACP,0DAAM,CAAC,qEAAW,CAAC,EACnB,0DAAG,CAAE,WAAC,IAAI,QAAC,CAAC,KAAI,CAAC,EAAE,CAAC,EAAV,CAAU,EACpB,0DAAG,CAAE,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAd,CAAc,CAAC,CAAC,CACzB,CAAC,SAAS,CAAC,WAAC,IAAI,YAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC,EAArC,CAAqC,CAAC,CAAC;IAC5D,CAAC;IAEF,0CAAW,GAAX;QAAA,iBAOE;QANC,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;QAC7C,IAAI,CAAC,KAAK,CAAC,IAAI,CACb,2DAAI,CAAC,CAAC,CAAC,EACP,0DAAM,CAAC,qEAAW,CAAC,EACnB,0DAAG,CAAE,WAAC,IAAI,QAAC,CAAC,KAAI,CAAC,EAAE,CAAC,EAAV,CAAU,CAAC,CACpB,CAAC,SAAS,CAAC,WAAC,IAAI,YAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,EAAnC,CAAmC,CAAC,CAAC;IAC1D,CAAC;IAtEQ;QAAR,2DAAK,EAAE;;uDAAc;IAFX,oBAAoB;QANhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,wHAA4C;;SAE7C,CAAC;+EAYkB,8DAAc;YACP,2DAAY;YAChB,wDAAQ;YACX,iDAAK;OAbZ,oBAAoB,CA2EhC;IAAD,2BAAC;CAAA;AA3EgC;;;;;;;;;;;;;;;;;;;;;;ACxCU;AACoB;AAGzB;AACgB;AACH;AAGnD,IAAM,WAAW,GAAG;IAClB,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC;CACjE,CAAC;AAGF;IAIE,sBAAqB,cAA8B,EAC9B,IAAgB;QADhB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,SAAI,GAAJ,IAAI,CAAY;QAH7B,aAAQ,GAAG,aAAa,CAAC,CAAE,iBAAiB;IAGX,CAAC;IAE1C,wDAAwD;IAChD,0BAAG,GAAX,UAAY,OAAe;QACzB,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,mBAAiB,OAAS,CAAC,CAAC;IACtD,CAAC;IAEO,kCAAW,GAAnB,UAAwB,SAAuB,EAAE,MAAU;QAA3D,iBAYC;QAZuB,mDAAuB;QAC7C,OAAO,UAAC,KAAU;YAEhB,wDAAwD;YACxD,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,yBAAyB;YAE/C,8DAA8D;YAC9D,KAAI,CAAC,GAAG,CAAI,SAAS,iBAAY,KAAK,CAAC,OAAS,CAAC,CAAC;YAElD,yDAAyD;YACzD,OAAO,+CAAE,CAAC,MAAW,CAAC,CAAC;QACzB,CAAC,CAAC;IACJ,CAAC;IAED,iCAAU,GAAV,UAAW,EAAU;QAArB,iBAMC;QALC,IAAM,GAAG,GAAG,gBAAc,EAAE,aAAU,CAAC;QACvC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,GAAG,CAAC,CAAC,IAAI,CACtC,0DAAG,CAAC,WAAC,IAAI,YAAI,CAAC,GAAG,CAAC,4BAA0B,EAAI,CAAC,EAAxC,CAAwC,CAAC,EAClD,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAW,mBAAiB,EAAI,CAAC,CAAC,CAC9D,CAAC;IACJ,CAAC;IAED,8BAAO,GAAP,UAAQ,EAAU;QAAlB,iBAMC;QALC,IAAM,GAAG,GAAG,gBAAc,EAAE,UAAO,CAAC;QACpC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,GAAG,CAAC,CAAC,IAAI,CACnC,0DAAG,CAAC,WAAC,IAAI,YAAI,CAAC,GAAG,CAAC,yBAAuB,EAAI,CAAC,EAArC,CAAqC,CAAC,EAC/C,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAQ,gBAAc,EAAI,CAAC,CAAC,CACxD,CAAC;IACJ,CAAC;IAED,8CAA8C;IAC9C,kCAAW,GAAX,UAAY,KAAqB;QAAjC,iBASC;QAPC,IAAM,EAAE,GAAG,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC;QACxD,IAAM,GAAG,GAAG,gBAAc,EAAI,CAAC;QAE/B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAQ,GAAG,EAAE,WAAW,CAAC,CAAC,IAAI,CACnD,0DAAG,CAAC,WAAC,IAAI,YAAI,CAAC,GAAG,CAAC,sBAAoB,EAAI,CAAC,EAAlC,CAAkC,CAAC,EAC5C,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAQ,aAAa,CAAC,CAAC,CACnD,CAAC;IACJ,CAAC;IAEF,oCAAa,GAAb,UAAc,EAAU;QAAxB,iBAWE;QATC,OAAO,CAAC,GAAG,CAAC,2CAA2C,CAAC,CAAC;QACzD,IAAM,GAAG,GAAG,gBAAc,EAAE,aAAU,CAAC;QACvC,IAAM,OAAO,GAAG,mFAAyE,CAAC;QAC1F,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;QAE1B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,OAAO,EAAE,WAAW,CAAC,CAAC,IAAI,CAC5C,0DAAG,CAAC,WAAC,IAAI,YAAI,CAAC,GAAG,CAAC,yBAAuB,EAAI,CAAC,EAArC,CAAqC,CAAC,EAC/C,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAQ,eAAe,CAAC,CAAC,CACrD,CAAC,SAAS,CAAC,cAAM,cAAO,CAAC,GAAG,CAAC,cAAc,CAAC,EAA3B,CAA2B,CAAC,CAAC;IACjD,CAAC;IAEF,kCAAW,GAAX,UAAa,EAAU;QAAvB,iBAUE;QARC,OAAO,CAAC,GAAG,CAAC,uCAAuC,CAAC,CAAC;QACrD,IAAM,GAAG,GAAG,gBAAc,EAAE,aAAU,CAAC;QACvC,IAAM,OAAO,GAAG,mFAAyE,CAAC;QAE1F,IAAI,CAAC,IAAI,CAAC,IAAI,CAAQ,GAAG,EAAE,OAAO,EAAE,WAAW,CAAC,CAAC,IAAI,CACnD,0DAAG,CAAC,WAAC,IAAI,YAAI,CAAC,GAAG,CAAC,2BAAyB,EAAI,CAAC,EAAvC,CAAuC,CAAC,EACjD,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAQ,aAAa,CAAC,CAAC,CACnD,CAAC,SAAS,CAAC,cAAM,cAAO,CAAC,GAAG,CAAC,cAAc,CAAC,EAA3B,CAA2B,CAAC,CAAC;IACjD,CAAC;IA7EU,YAAY;QADxB,gEAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;+EAKI,+DAAc;YACxB,+DAAU;OAL1B,YAAY,CAmFxB;IAAD,mBAAC;CAAA;AAnFwB;;;;;;;;;;;;ACdzB,wEAAwE,gBAAgB,GAAG,eAAe,yCAAyC,iBAAiB,GAAG,aAAa,sBAAsB,0BAA0B,eAAe,mBAAmB,gBAAgB,qBAAqB,GAAG,gBAAgB,oBAAoB,uBAAuB,YAAY,2BAA2B,iBAAiB,oBAAoB,kBAAkB,uBAAuB,GAAG,+BAA+B,yCAAyC,iBAAiB,GAAG,sBAAsB,mBAAmB,2BAA2B,eAAe,GAAG,mBAAmB,uBAAuB,cAAc,GAAG,oBAAoB,0BAA0B,qBAAqB,iBAAiB,iCAAiC,8BAA8B,qBAAqB,uBAAuB,eAAe,cAAc,kBAAkB,uBAAuB,+BAA+B,GAAG,+CAA+C,mrE;;;;;;;;;;;ACApiC,yZAAyZ,MAAM,kOAAkO,MAAM,MAAM,QAAQ,+LAA+L,gBAAgB,MAAM,uLAAuL,aAAa,MAAM,uNAAuN,OAAO,wBAAwB,OAAO,uIAAuI,2BAA2B,mB;;;;;;;;;;;;;;;;;;;ACAj6C;AASN;AAGwC;AAYpF;IAOE,yBAAsB,KAAsB;QAAtB,UAAK,GAAL,KAAK,CAAiB;QAL5C,YAAO,GAAgB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,0DAAM,CAAC,yEAAe,CAAC,CAAC,CAAC;QAChE,oBAAe,GAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,0DAAM,CAAC,8EAAoB,CAAC,CAAC,CAAC;QAErE,qBAAgB,GAAa,CAAC,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;IAEnB,CAAC;IAElD,kCAAQ,GAAR;QACG,iDAAiD;IACpD,CAAC;IAXU,eAAe;QAN3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,sGAAsC;;SAEvC,CAAC;+EAS6B,iDAAK;OAPvB,eAAe,CAa3B;IAAD,sBAAC;CAAA;AAb2B;;;;;;;;;;;;ACxB5B,6BAA6B,uBAAuB,oBAAoB,GAAG,eAAe,yBAAyB,kBAAkB,GAAG,oBAAoB,uBAAuB,iBAAiB,GAAG,+CAA+C,+lB;;;;;;;;;;;ACAtP,oN;;;;;;;;;;;;;;;;;;;;ACAqE;AAClB;AAKF;AACD;AAIJ;AAoB5C;IAOE,0BAAoB,QAAkB,EACjB,YAA0B,EAC1B,KAAsB,EACvB,KAAqB;QAHrB,aAAQ,GAAR,QAAQ,CAAU;QACjB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,UAAK,GAAL,KAAK,CAAiB;QACvB,UAAK,GAAL,KAAK,CAAgB;IAAI,CAAC;IAE9C,mCAAQ,GAAR;QACE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAE,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;QAC9D,IAAM,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,GAAI,IAAI,CAAC,CAAC,CAAC;QACxD,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAErB,sCAAsC;QAEnC,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,CAAC,EAAG,GAAG,EAAE,EAAE;YACtC,IAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,OAAO,GAAI,GAAG,GAAG,KAAK,CAAC,CAAC;YACrD,IAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAE,GAAG,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC;YACzC,IAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;YAE3C,IAAM,MAAM,GAAe,EAAC,QAAQ,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAC,CAAC;YACrE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAE,MAAM,CAAC,CAAC;SAC5B;QAEF,8BAA8B;IAC/B,CAAC;IA3BQ;QAAR,2DAAK,EAAE;;qDAAiB;IAChB;QAAR,2DAAK,EAAE;;mDAAe;IAHZ,gBAAgB;QAP5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,yGAAuC;;SAExC,CAAC;+EAU8B,sDAAQ;YACH,2DAAY;YACnB,iDAAK;YACN,8DAAc;OAV9B,gBAAgB,CA8B5B;IAAD,uBAAC;CAAA;AA9B4B;;;;;;;;;;;;AC/B7B,6BAA6B,uBAAuB,oBAAoB,GAAG,eAAe,yBAAyB,kBAAkB,GAAG,oBAAoB,uBAAuB,iBAAiB,GAAG,+CAA+C,+mB;;;;;;;;;;;ACAtP,+I;;;;;;;;;;;;;;;;;;;;;;ACAqE;AAClB;AAG6B;AAE/B;AACD;AAIJ;AAEqD;AAajG;IAsBE,6BAAoB,QAAkB,EAC5B,YAA0B,EAC3B,KAAsB,EACrB,KAAqB;QAHX,aAAQ,GAAR,QAAQ,CAAU;QAC5B,iBAAY,GAAZ,YAAY,CAAc;QAC3B,UAAK,GAAL,KAAK,CAAiB;QACrB,UAAK,GAAL,KAAK,CAAgB;QAnB/B,YAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,0DAAM,CAAC,qEAAW,CAAC,CAAC,CAAC;QAI/C,SAAI,GAAG,KAAK,CAAC;QACb,SAAI,GAAG,KAAK,CAAC;QACb,SAAI,GAAG,KAAK,CAAC;QAGb,gBAAW,GAAG,GAAG,CAAC;IAUiB,CAAC;IAEpC,sCAAQ,GAAR;QAAA,iBASC;QARC,IAAM,EAAE,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QAC5D,IAAI,CAAC,KAAK,CAAC,IAAI,CACb,0DAAM,CAAC,qEAAW,CAAC,EACnB,0DAAG,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,CAAC,EAAL,CAAK,CAAC,CAChB,CAAC,SAAS,CAAC,WAAC,IAAI,YAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAA1B,CAA0B,CAAC,CAAC;QAE7C,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,gDAAkB,GAAlB,UAAmB,CAAQ;QACzB,IAAI,CAAC,EAAE;YACL,sCAAsC;YACtC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;YAChB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC;SACvC;IACH,CAAC;IAED,4CAAc,GAAd;QAEE,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE;YAEvC,IAAM,KAAG,GAA6B,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAEnF,IAAM,cAAc,GAAG,EAAE,CAAC;YAC1B,IAAM,cAAY,GAAG,cAAc,GAAG,CAAC,CAAC;YACxC,IAAM,kBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;YACvE,IAAM,gBAAc,GAAG,IAAI,CAAC,KAAK,CAAC,cAAY,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;YACnE,IAAM,cAAY,GAAG,gBAAc,CAAC;YAEpC,IAAM,MAAM,GAAG,cAAY,GAAG,kBAAgB,GAAG,cAAY,CAAC;YAC9D,IAAM,KAAK,GAAG,cAAY,CAAC;YAE3B,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,QAAQ,EAAE,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC3F,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,OAAO,EAAE,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;YACzF,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,QAAQ,EAAE,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC3F,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,OAAO,EAAE,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;YAEzF,KAAG,CAAC,WAAW,GAAG,SAAS,CAAC;YAC5B,KAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;YACnC,IAAM,CAAC,GAAG,CAAC,CAAC;YACZ,KAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,gBAAc,CAAC,CAAC;YACtC,KAAG,CAAC,IAAI,CAAC,CAAC,EAAE,gBAAc,EAAE,KAAK,EAAE,kBAAgB,CAAC,CAAC;YACrD,KAAG,CAAC,IAAI,CAAC,CAAC,EAAE,gBAAc,GAAG,kBAAgB,EAAE,KAAK,EAAE,cAAY,CAAC,CAAC;YAEpE,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE;gBACjC,KAAG,CAAC,IAAI,CAAC,GAAG,GAAG,cAAc,EAAE,gBAAc,EAAE,cAAc,EAAE,kBAAgB,CAAC,CAAC;aAClF;YACD,KAAG,CAAC,MAAM,EAAE,CAAC;YAEb,IAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC;YACpD,IAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC;YAChD,IAAM,SAAO,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;YAEnC,IAAI,WAAW,KAAK,SAAS,EAAE;gBAC7B,0BAA0B;gBAC1B,IAAM,QAAM,GAAG,IAAI,CAAC,OAAO,GAAG,WAAW,GAAG,IAAI,CAAC;gBACjD,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,SAAS,GAAG,IAAI,CAAC;gBAC3C,IAAM,QAAM,GAAG,IAAI,GAAG,QAAM,GAAG,CAAC,CAAC;gBAGjC,IAAI,IAAI,CAAC,OAAO,EAAE;oBAChB,8CAA8C;oBAC9C,IAAM,CAAC,GAAW,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;oBAC5C,IAAM,aAAW,GAAG,IAAI,KAAK,EAAE,CAAC;oBAChC,aAAW,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC;oBACxB,aAAW,CAAC,MAAM,GAAG;wBACnB,KAAG,CAAC,SAAS,CAAC,aAAW,EACvB,QAAM,EAAE,CAAC,EAAE,QAAM,EAAE,SAAO,EAC1B,CAAC,EAAE,gBAAc,GAAG,kBAAgB,EAAE,cAAY,EAAE,cAAY,CAAC,CAAC;oBACtE,CAAC,CAAC;iBACH;aACF;iBACI;gBACH,IAAM,SAAO,GAAG,IAAI,CAAC,OAAO,GAAG,WAAW,GAAG,IAAI,CAAC;gBAClD,IAAM,KAAK,GAAG,IAAI,CAAC;gBACnB,IAAM,SAAO,GAAG,KAAK,GAAG,SAAO,GAAG,CAAC,CAAC;gBAGpC,IAAI,IAAI,CAAC,OAAO,EAAE;oBAChB,+CAA+C;oBAC/C,IAAM,CAAC,GAAW,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;oBAC5C,IAAM,aAAW,GAAG,IAAI,KAAK,EAAE,CAAC;oBAChC,aAAW,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC;oBACxB,aAAW,CAAC,MAAM,GAAG;wBACnB,KAAG,CAAC,SAAS,CAAC,aAAW,EACvB,SAAO,EAAE,CAAC,EAAE,SAAO,EAAE,SAAO,EAC5B,CAAC,EAAE,gBAAc,GAAG,kBAAgB,EAAE,cAAY,EAAE,cAAY,CAAC,CAAC;oBACtE,CAAC,CAAC;iBACH;gBACD,IAAM,SAAO,GAAG,CAAC,CAAC;gBAClB,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,SAAS,GAAG,IAAI,CAAC;gBAC5C,IAAM,SAAO,GAAG,KAAK,GAAG,SAAO,GAAG,CAAC,CAAC;gBAGpC,IAAI,IAAI,CAAC,OAAO,EAAE;oBAChB,+CAA+C;oBAC/C,IAAM,CAAC,GAAW,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;oBAC1C,IAAM,aAAW,GAAG,IAAI,KAAK,EAAE,CAAC;oBAChC,aAAW,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC;oBACxB,aAAW,CAAC,MAAM,GAAG;wBACnB,KAAG,CAAC,SAAS,CAAC,aAAW,EACvB,SAAO,EAAE,CAAC,EAAE,SAAO,EAAE,SAAO,EAC5B,CAAC,EAAE,gBAAc,GAAG,kBAAgB,EAAE,cAAY,EAAE,cAAY,CAAC,CAAC;oBACtE,CAAC,CAAC;iBACH;aAKF;SACF;IACH,CAAC;IAED,yCAAW,GAAX;QACE,IAAM,GAAG,GAA6B,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACxF,GAAG,CAAC,WAAW,GAAG,SAAS,CAAC;IAC9B,CAAC;IAED,2CAAa,GAAb,UAAc,OAAO;QACnB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,mCAAmC;QACnC,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,wCAAU,GAAV,UAAW,IAAI;QACb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,qCAAqC;QACrC,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,wCAAU,GAAV;QAAA,iBAIC;QAHC,IAAM,EAAE,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QAC5D,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,CAAC;aAC7B,SAAS,CAAC,iBAAO,IAAI,YAAI,CAAC,aAAa,CAAC,OAAO,CAAC,EAA3B,CAA2B,CAAC,CAAC;IACvD,CAAC;IAED,qCAAO,GAAP;QAAA,iBAIC;QAHC,IAAM,EAAE,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QAC5D,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE,CAAC;aAC1B,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAArB,CAAqB,CAAC,CAAC;IAC9C,CAAC;IA1KQ;QAAR,2DAAK,EAAE;;wDAAiB;IAChB;QAAR,2DAAK,EAAE;;sDAAe;IACd;QAAR,2DAAK,EAAE;;yDAAkB;IAaH;QAAtB,+DAAS,CAAC,UAAU,CAAC;wEAAW,wDAAU;yDAAC;IAErB;QAAtB,+DAAS,CAAC,UAAU,CAAC;wEAAW,wDAAU;yDAAC;IAChB;QAA3B,+DAAS,CAAC,eAAe,CAAC;wEAAgB,wDAAU;8DAAC;IApB3C,mBAAmB;QAP/B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,kHAA0C;;SAE3C,CAAC;+EAyB8B,sDAAQ;YACd,2DAAY;YACpB,iDAAK;YACJ,8DAAc;OAzBpB,mBAAmB,CA6K/B;IAAD,0BAAC;CAAA;AA7K+B;;;;;;;;;;;;;ACxBhC;AAAA;AAAA;AAAA;AAA2D;AACQ;AAE5D,IAAM,QAAQ,GAA0B;IAC3C,MAAM,EAAI,+DAAqB;IAC/B,QAAQ,EAAE,oEAAwB;CACrC,CAAC;;;;;;;;;;;;;;;;;;;ACPiD;AACiB;AAIpE;IAKE;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,WAAW,CAAC,SAAS,CAAC,CAAC;IAC9C,CAAC;IAED,6BAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAE,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAd,CAAc,CAAC;IAC/C,CAAC;IAED,6BAAQ,GAAR;QAAA,iBAOC;QANC,IAAM,UAAU,GAA8B,IAAI,+CAAU,CAAC,kBAAQ;YACnE,IAAM,OAAO,GAAG,UAAC,KAAK,IAAK,eAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,EAApB,CAAoB,CAAC;YAChD,KAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;YACrD,OAAO,cAAM,YAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,UAAU,EAAE,OAAO,CAAC,EAAvD,CAAuD,CAAC;QACvE,CAAC,CAAC,CAAC;QACH,OAAO,UAAU,CAAC;IACpB,CAAC;IArBU,UAAU;QADtB,gEAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAC,CAAC;;OACrB,UAAU,CAuBtB;IAAD,iBAAC;CAAA;AAvBsB;AA2BvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA8BE;;;;;;;;;;;;AC/DF,+DAA+D,mK;;;;;;;;;;;ACA/D,oH;;;;;;;;;;;;;;;;;ACA8D;AACrB;AAOzC;IAIE;IAAgB,CAAC;IAEjB,0CAAQ,GAAR;QACE,IAAI,GAAG,GACL,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAEhD,8BAA8B;QAC9B,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAE9B,oDAAoD;QACpD,yBAAyB;QACzB,GAAG,CAAC,SAAS,EAAE,CAAC;QAChB,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QACpB,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QACxB,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QACxB,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACrB,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QACzB,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QACzB,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QACvB,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QACzB,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QACvB,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QACzB,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QACzB,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QACzB,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QACzB,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QACvB,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QACvB,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QACvB,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACrB,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QACvB,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAElB,uCAAuC;QACzC,GAAG,CAAC,SAAS,EAAE,CAAC;QAChB,GAAG,CAAC,SAAS,GAAG,SAAS,CAAC;QAC1B,KAAK,IAAI,CAAC,GAAC,CAAC,EAAG,CAAC,GAAG,KAAK,EAAG,CAAC,EAAE,EAAE;YAC/B,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC;YAC5B,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC;YAC5B,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACjB,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;SACjC;QACD,GAAG,CAAC,IAAI,EAAE,CAAC;IACb,CAAC;IA5CsB;QAAtB,+DAAS,CAAC,UAAU,CAAC;wEAAY,wDAAU;8DAAC;IAFlC,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,iIAA+C;;SAEhD,CAAC;;OACW,uBAAuB,CA+CnC;IAAD,8BAAC;CAAA;AA/CmC;;;;;;;;;;;;ACRpC,6BAA6B,uBAAuB,GAAG,oBAAoB,uBAAuB,iBAAiB,GAAG,uBAAuB,uBAAuB,eAAe,GAAG,+CAA+C,ujB;;;;;;;;;;;ACArO,qQ;;;;;;;;;;;;;;;;;;;ACA8D;AACX;AAEF;AACD;AAYhD;IAQE,0BAAoB,QAAkB,EAAU,YAA0B,EAAU,KAAqB;QAArF,aAAQ,GAAR,QAAQ,CAAU;QAAU,iBAAY,GAAZ,YAAY,CAAc;QAAU,UAAK,GAAL,KAAK,CAAgB;IAAI,CAAC;IAE9G,mCAAQ,GAAR;QACE,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,qCAAU,GAAV;QACC,IAAM,GAAG,GAA6B,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACrF,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;QAC/B,IAAI,CAAC,GAAG,CAAC,CAAC;gCACC,CAAC;YAChB,6BAA6B;YACpB,IAAM,WAAW,GAAG,IAAI,KAAK,EAAE,CAAC;YAChC,WAAW,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC;YACxB,IAAM,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;YACjB,WAAW,CAAC,MAAM,GAAG,cAAe,GAAG,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC,EAAC,CAAC,CAAC;YAChF,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;;QANf,KAAgB,UAAY,EAAZ,SAAI,CAAC,OAAO,EAAZ,cAAY,EAAZ,IAAY;YAAvB,IAAM,CAAC;oBAAD,CAAC;SAOX;IACH,CAAC;IAED,sCAAW,GAAX;QACE,IAAM,GAAG,GAA6B,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACxF,GAAG,CAAC,WAAW,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,KAAc,UAAS,EAAT,SAAI,CAAC,IAAI,EAAT,cAAS,EAAT,IAAS,EAAE;YAApB,IAAI,CAAC;YACR,IAAI,CAAC,GAAG,CAAC,EAAE;gBACT,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,MAAM,CAAC,CAAC;gBAClC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI;gBACtC,GAAG,CAAC,SAAS,EAAE,CAAC;gBAChB,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,GAAC,CAAC,CAAC,CAAC;gBACxB,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAC,CAAC,CAAC,CAAC;gBAC7B,GAAG,CAAC,MAAM,EAAE,CAAC;gBACb,wBAAwB;aACzB;YACD,CAAC,IAAI,CAAC,CAAC;SACR;IACH,CAAC;IAED,qDAA0B,GAA1B,UAA4B,OAAO;QAC/B,IAAI,CAAC,OAAO,GAAG,OAAO;QACtB,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE;QAChC,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,QAAQ,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;QACzF,IAAI,CAAC,UAAU,EAAE;IACrB,CAAC;IAED,mDAAwB,GAAxB,UAA0B,IAAI;QAC1B,IAAI,CAAC,IAAI,GAAG,IAAI;QAChB,oBAAoB;QACpB,IAAI,MAAM,GAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC,EAAE;QACpC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACvC,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,QAAQ,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC3F,IAAI,CAAC,WAAW,EAAE;IACtB,CAAC;IAED,qCAAU,GAAV;QAAA,iBAIC;QAHC,IAAM,EAAE,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QAC5D,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,CAAC;aAC3B,SAAS,CAAC,iBAAO,IAAI,YAAI,CAAC,0BAA0B,CAAC,OAAO,CAAC,EAAxC,CAAwC,CAAG,CAAC;IACxE,CAAC;IAED,kCAAO,GAAP;QAAA,iBAIC;QAHC,IAAM,EAAE,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QAC5D,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE,CAAC;aACxB,SAAS,CAAG,cAAI,IAAI,YAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,EAAnC,CAAmC,CAAE,CAAC;IACjE,CAAC;IApE2B;QAA3B,+DAAS,CAAC,aAAa,CAAC;wEAAgB,wDAAU;yDAAC;IACxB;QAA3B,+DAAS,CAAC,eAAe,CAAC;wEAAgB,wDAAU;2DAAC;IAN3C,gBAAgB;QAP5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,yGAAuC;;SAExC,CAAC;+EAW8B,sDAAQ,EAAwB,2DAAY,EAAiB,8DAAc;OAR9F,gBAAgB,CA2E5B;IAAD,uBAAC;CAAA;AA3E4B;;;;;;;;;;;;;;;;;;;;;;;AChBc;AAE+C;AAG9C;AAEqB;AACN;AAEhB;AAG3C,IAAM,YAAY,GAAG,+BAA+B,CAAC;AAarD;IAIE,0BAAqB,KAAsB,EAC/B,OAAmB;QAD/B,iBAeG;QAfkB,UAAK,GAAL,KAAK,CAAiB;QAEzC,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;QAEhD,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC,IAAI,CACrC,0DAAG,CAAE,UAAC,QAAsB;YAC1B,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YACvC,OAAO;gBACL,OAAO,EAAO,IAAI,CAAC,OAAO;gBAC1B,SAAS,EAAK,IAAI,CAAC,SAAS;gBAC5B,OAAO,EAAO,IAAI,CAAC,OAAO;aACrB,CAAC;QACN,CAAC,CACJ,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAG,YAAE,IAAK,YAAI,CAAC,qBAAqB,CAAC,EAAE,CAAC,EAA9B,CAA8B,CAAE,CAAC;IACpE,CAAC;IAEH,gDAAqB,GAArB,UAAuB,EAAiB;QACxC,qBAAqB;QACnB,QAAQ,EAAE,CAAC,OAAO,EAAE;YAClB,KAAK,OAAO,CAAC,CAAC;gBACZ,IAAI,CAAC,sBAAsB,CAAC,EAAE,CAAC,CAAC;gBAChC,MAAM;aACP;YACD,KAAK,MAAM,CAAC,CAAC;gBACX,IAAI,CAAC,qBAAqB,CAAC,EAAE,CAAC,CAAC;gBAC/B,MAAM;aACP;YACD,OAAO,CAAC,CAAC;gBACL,MAAM;aACT;SACF;IACH,CAAC;IAED,iDAAsB,GAAtB,UAAwB,EAAiB;QACvC,QAAQ,EAAE,CAAC,SAAS,EAAE;YACpB,KAAK,QAAQ,CAAC,CAAC;gBACb,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,sEAAyB,CAAE,EAAC,KAAK,EAAE,EAAE,CAAC,OAAO,EAAC,CAAC,CAAC,CAAC;gBACzE,MAAM;aACP;YACD,OAAO,CAAC,CAAC;gBACL,MAAM;aACT;SACF;IACH,CAAC;IAED,gDAAqB,GAArB,UAAuB,EAAiB;QACtC,QAAQ,EAAE,CAAC,SAAS,EAAE;YACpB,KAAK,MAAM,CAAC,CAAC;gBACX,OAAO,CAAC,GAAG,CAAE,iCAAiC,CAAC;gBAC/C,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,gEAAyB,EAAG,CAAC,CAAC;gBACtD,MAAM;aACP;YACD,KAAK,QAAQ,CAAC,CAAC;gBACb,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,+DAAwB,CAAE,EAAC,IAAI,EAAE,EAAE,CAAC,OAAO,EAAC,CAAC,CAAC,CAAC;gBACvE,MAAM;aACP;YACD,OAAO,CAAC,CAAC;gBACL,MAAM;aACT;SACF;IACH,CAAC;IAjEU,gBAAgB;QAJ5B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAM4B,iDAAK;YACZ,uDAAU;OALpB,gBAAgB,CAsE5B;IAAD,uBAAC;CAAA;AAtE4B;;;;;;;;;;;;;ACtB7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAY,mBAQX;AARD,WAAY,mBAAmB;IAC7B,2DAA0C;IAC1C,yEAAkD;IAClD,sEAAgD;IAChD,uDAAwC;IACxC,gEAA2C;IAC3C,6DAAyC;IACzC,yDAAyC;AAC3C,CAAC,EARW,mBAAmB,KAAnB,mBAAmB,QAQ9B;AAED;IAAA;QACW,SAAI,GAAG,mBAAmB,CAAC,SAAS,CAAC;IAChD,CAAC;IAAD,gBAAC;AAAD,CAAC;;AAED;IAAA;QACW,SAAI,GAAG,mBAAmB,CAAC,eAAe,CAAC;IACtD,CAAC;IAAD,sBAAC;AAAD,CAAC;;AAED;IAAA;QACW,SAAI,GAAG,mBAAmB,CAAC,cAAc,CAAC;IACrD,CAAC;IAAD,qBAAC;AAAD,CAAC;;AAED;IAAA;QACW,SAAI,GAAG,mBAAmB,CAAC,OAAO,CAAC;IAC9C,CAAC;IAAD,cAAC;AAAD,CAAC;;AAED;IAAA;QACW,SAAI,GAAG,mBAAmB,CAAC,aAAa,CAAC;IACpD,CAAC;IAAD,oBAAC;AAAD,CAAC;;AAED;IAAA;QACW,SAAI,GAAG,mBAAmB,CAAC,YAAY,CAAC;IACnD,CAAC;IAAD,mBAAC;AAAD,CAAC;;AAED;IAEE,kBAAmB,OAA+B;QAA/B,YAAO,GAAP,OAAO,CAAwB;QADzC,SAAI,GAAG,mBAAmB,CAAC,QAAQ,CAAC;IACQ,CAAC;IACxD,eAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;ACzC0C;AACC;AACK;AACO;AAC6B;AAC/C;AAIQ;AACO;AAMrD;IA8BE,wBACW,IAAgB,EAChB,QAAiB,EACjB,KAAsB;QAHjC,iBAKC;QAJU,SAAI,GAAJ,IAAI,CAAY;QAChB,aAAQ,GAAR,QAAQ,CAAS;QACjB,UAAK,GAAL,KAAK,CAAiB;QA/BzB,YAAO,GAAG,YAAY,CAAC,CAAE,iBAAiB;QAGlD,eAAU,GAAG,IAAI,CAAC,QAAQ;aACzB,IAAI,CACH,4DAAM,CAAC,qEAAkC,CAAC,SAAS,CAAC,EACpD,+DAAQ,CAAC,cAAM,YAAI,CAAC,IAAI,CAAC,GAAG,CAAS,KAAI,CAAC,OAAO,CAAC;aAC/C,IAAI,CAEH,0DAAG,CAAE,eAAK,IAAI,QAAC,IAAI,uDAAqB,CAAE,EAAC,KAAK,EAAE,KAAK,EAAC,CAAC,CAAC,EAA5C,CAA4C,CAAE,EAC5D,iEAAU,CAAC,cAAM,sDAAE,CAAC,EAAE,IAAI,EAAE,2BAA2B,EAAE,CAAC,EAAzC,CAAyC,CAAC,EAC3D,+DAAQ,CAAC,cAAM,YAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,iEAA8B,EAAG,CAAC,EAA1D,CAA0D,CAAC,CAC3E,EANY,CAMZ,CAEF,CACF,CAAC;QAGF,cAAS,GAAG,IAAI,CAAC,QAAQ;aACxB,IAAI,CACH,4DAAM,CAA0B,qEAAkC,CAAC,QAAQ,CAAC;QAChF,qDAAqD;QACjD,gEAAS,CAAE,oBAAU,IAAI;YACvB,IAAI,wDAAsB,CAAE,EAAC,IAAI,EAAE,UAAU,CAAC,OAAO,CAAC,IAAI,EAAC,CAAE;SAC9D,EAFwB,CAExB,CAAC,CACH,CAAC;IAQF,CAAC;IA9BD;QADC,4DAAM,EAAE;;sDAaP;IAGF;QADC,4DAAM,EAAE;;qDAQP;IA3BS,cAAc;QAD1B,gEAAU,EAAE;+EAgCM,+DAAU;YACN,qDAAO;YACV,iDAAK;OAjCZ,cAAc,CAoC1B;IAAD,qBAAC;CAAA;AApC0B;;;;;;;;;;;;;ACf3B;AAAA;AAAA;AAAA;AAA0E;AAUnE,IAAM,YAAY,GAAU;IACjC,OAAO,EAAE,KAAK;IACd,KAAK,EAAE,IAAI;CACZ,CAAC;AAEK,SAAS,OAAO,CACrB,KAAoB,EACpB,MAAuB;IADvB,4CAAoB;IAGpB,QAAQ,MAAM,CAAC,IAAI,EAAE;QAEnB,KAAK,qEAAmB,CAAC,SAAS,CAAC,CAAC;YACxC,sDAAsD;YAChD,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE,EAAC,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAC,CAAC,CAAC;SAC/D;QACD,KAAK,qEAAmB,CAAC,eAAe,CAAC,CAAC;YAC9C,4DAA4D;YACtD,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE,EAAC,OAAO,EAAE,KAAK,EAAC,CAAC,CAAC;SACnD;QACD,KAAK,qEAAmB,CAAC,cAAc,CAAC,CAAC;YACvC,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE,EAAC,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAC,CAAC,CAAC;SACnE;QAED;YACE,OAAO,KAAK,CAAC;KAChB;AACH,CAAC;;;;;;;;;;;;ACrCD,yBAAyB,kBAAkB,KAAK,iDAAiD,+T;;;;;;;;;;;ACAjG,2cAA2c,WAAW,OAAO,iCAAiC,yLAAyL,YAAY,4KAA4K,SAAS,4LAA4L,YAAY,MAAM,sIAAsI,2BAA2B,mB;;;;;;;;;;;;;;;;;;;;ACArrC;AAGN;AAGO;AACiD;AASpG;IAOE,2BAAsB,KAAsB;QAAtB,UAAK,GAAL,KAAK,CAAiB;QAL5C,WAAM,GAAS,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,0DAAM,CAAC,8DAAc,CAAC,CAAC,CAAC;QACvD,YAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,0DAAM,CAAC,qEAAW,CAAC,CAAC,CAAC;QAE/C,qBAAgB,GAAa,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;IAEzB,CAAC;IAElD,oCAAQ,GAAR;QACA,gDAAgD;IAChD,CAAC;IAXU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,oHAAyC;;SAE1C,CAAC;+EAQ6B,iDAAK;OAPvB,iBAAiB,CAa7B;IAAD,wBAAC;CAAA;AAb6B;;;;;;;;;;;;;ACZ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAY,eAWX;AAXD,WAAY,eAAe;IACzB,kDAA+B;IAC/B,8CAA2B;IAC3B,oDAAiC;IACjC,gDAA6B;IAC7B,sDAAmC;IACnC,oDAAiC;IACjC,sDAAmC;IACnC,oDAAiC;IACjC,sDAAmC;IACnC,oDAAiC;AACnC,CAAC,EAXW,eAAe,KAAf,eAAe,QAW1B;AAED;IAGE,mBAAmB,OAA0B;QAA1B,YAAO,GAAP,OAAO,CAAmB;QAFpC,SAAI,GAAG,eAAe,CAAC,SAAS,CAAC;IAEM,CAAC;IACnD,gBAAC;AAAD,CAAC;;AAED;IAGE,iBAAmB,OAAuB;QAAvB,YAAO,GAAP,OAAO,CAAgB;QAFjC,SAAI,GAAG,eAAe,CAAC,OAAO,CAAC;IAEK,CAAC;IAChD,cAAC;AAAD,CAAC;;AAED;IAGE,oBAAmB,OAAuB;QAAvB,YAAO,GAAP,OAAO,CAAgB;QAFjC,SAAI,GAAG,eAAe,CAAC,UAAU,CAAC;IAEE,CAAC;IAChD,iBAAC;AAAD,CAAC;;AAED;IAGE,kBAAmB,OAA0B;QAA1B,YAAO,GAAP,OAAO,CAAmB;QAFpC,SAAI,GAAG,eAAe,CAAC,QAAQ,CAAC;IAEO,CAAC;IACnD,eAAC;AAAD,CAAC;;AAED;IAGE,qBAAmB,OAA0B;QAA1B,YAAO,GAAP,OAAO,CAAmB;QAFpC,SAAI,GAAG,eAAe,CAAC,WAAW,CAAC;IAEI,CAAC;IACnD,kBAAC;AAAD,CAAC;;AAED;IAGE,oBAAmB,OAA+B;QAA/B,YAAO,GAAP,OAAO,CAAwB;QAFzC,SAAI,GAAG,eAAe,CAAC,UAAU,CAAC;IAEU,CAAC;IACxD,iBAAC;AAAD,CAAC;;AAED;IAGE,qBAAmB,OAAkC;QAAlC,YAAO,GAAP,OAAO,CAA2B;QAF5C,SAAI,GAAG,eAAe,CAAC,WAAW,CAAC;IAEY,CAAC;IAC3D,kBAAC;AAAD,CAAC;;AAED;IAGE,oBAAmB,OAAuB;QAAvB,YAAO,GAAP,OAAO,CAAgB;QAFjC,SAAI,GAAG,eAAe,CAAC,UAAU,CAAC;IAEE,CAAC;IAChD,iBAAC;AAAD,CAAC;;AAED;IAGE,qBAAmB,OAA0B;QAA1B,YAAO,GAAP,OAAO,CAAmB;QAFpC,SAAI,GAAG,eAAe,CAAC,WAAW,CAAC;IAEI,CAAC;IACnD,kBAAC;AAAD,CAAC;;AAED;IAAA;QACW,SAAI,GAAG,eAAe,CAAC,UAAU,CAAC;IAC7C,CAAC;IAAD,iBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzEwC;AACM;AACL;AACI;AAEL;AACW;AACgB;AAEpE,WAAW;AAC4C;AACR;AAE/C,QAAQ;AAiBR;IAAA;IACA,CAAC;IADY,UAAU;QAhBtB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACd,gFAAiB;aAAC;YAElB,OAAO,EAAE;gBACP,4DAAY;gBACZ,sEAAc;gBACd,4DAAY;gBACZ,2DAAa,CAAC,UAAU,CAAC,CAAC,gEAAc,CAAC,CAAC;gBAC1C,uDAAW,CAAC,UAAU,CAAC,MAAM,EAAE,wDAAqB,CAAC;aACpD;YAED,OAAO,EAAE,CAAE,sEAAc,CAAE;SAC9B,CAAC;OAGW,UAAU,CACtB;IAAD,iBAAC;CAAA;AADsB;;;;;;;;;;;;;;;;;;;;;;;;AC9BwD;AAEjB;AAQ9D,SAAS,aAAa,CAAC,EAAQ,EAAE,EAAQ;IACvC,IAAI,EAAE,CAAC,OAAO,KAAK,EAAE,CAAC,OAAO,EAAE;QAC7B,OAAO,CAAC,EAAE,CAAC,QAAQ,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC;KACpC;SAAM;QACL,OAAO,CAAC,EAAE,CAAC,OAAO,GAAG,EAAE,CAAC,OAAO,CAAC,CAAC;KAClC;AACH,CAAC;AAIM,IAAM,OAAO,GAAwB,wEAAmB,CAC7D;IACE,YAAY,EAAE,aAAa;CAC5B,CACF,CAAC;AAEK,IAAM,YAAY,GAAU,OAAO,CAAC,eAAe,CAAC;IACzD,WAAW,EAAE,KAAK;IAClB,UAAU,EAAE,KAAK;IACjB,qCAAqC;CACtC,CAAC,CAAC;AAEI,SAAS,OAAO,CACrB,KAAoB,EACpB,MAAmB;IADnB,4CAAoB;IAGpB,QAAQ,MAAM,CAAC,IAAI,EAAE;QACnB,KAAK,6DAAe,CAAC,OAAO,CAAC,CAAC;YAC5B,OAAO,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;SACnD;QAED,KAAK,6DAAe,CAAC,UAAU,CAAC,CAAC;YAC/B,OAAO,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;SACtD;QAED,KAAK,6DAAe,CAAC,QAAQ,CAAC,CAAC;YAC7B,OAAO,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;SACrD;QAED,KAAK,6DAAe,CAAC,WAAW,CAAC,CAAC;YAChC,OAAO,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;SACxD;QAED,KAAK,6DAAe,CAAC,UAAU,CAAC,CAAC;YAC/B,OAAO,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;SACtD;QAED,KAAK,6DAAe,CAAC,WAAW,CAAC,CAAC;YAChC,OAAO,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;SACxD;QAED,KAAK,6DAAe,CAAC,UAAU,CAAC,CAAC;YAC/B,OAAO,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;SACpD;QAED,KAAK,6DAAe,CAAC,WAAW,CAAC,CAAC;YAChC,OAAO,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;SACtD;QAED,KAAK,6DAAe,CAAC,SAAS,CAAC,CAAC;YAC9B,OAAO,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;SACpD;QAED,KAAK,6DAAe,CAAC,UAAU,CAAC,CAAC;YAC/B,OAAO,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;SACjC;QAED,OAAO,CAAC,CAAC;YACP,OAAO,KAAK,CAAC;SACd;KACF;AACH,CAAC;AAGC,2DAAS,EACT,kCAAc,EACd,wBAAS,EACT,4BAAW,CACc;;;;;;;;;;;;;ACxF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AACJ;AAInC,6EAAsD,EAApD,kCAAc,EAAE,wBAAoC,CAAC;AAGtD,IAAM,eAAe,GAAG,UAAC,KAAe,IAAK,YAAK,CAAC,IAAI,CAAC,KAAK,EAAhB,CAAgB,CAAC;AAE9D,IAAM,cAAc,GAAI,kEAAc,CAC3C,eAAe,EACf,SAAS,CAAC,CAAC;AAEJ,IAAM,mBAAmB,GAAG,kEAAc,CAC/C,eAAe,EACf,cAAc,CAAC,CAAC;;;;;;;;;;;;;ACdpB;AAAA;AAAA;AAAA;AAA+C;AACO;AAQ/C,IAAM,YAAY,GAA0B;IAC/C,KAAK,EAAK,qDAAoB;IAC9B,QAAQ,EAAE,yDAAuB;CACpC,CAAC;;;;;;;;;;;;;ACdF;AAAA;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;ACPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkB;AAC6B;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule }             from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MoviesComponent }      from './movies/movies.component';\nimport { DashboardComponent }   from './dashboard/dashboard.component';\nimport { MovieDetailComponent }  from './movie-detail/movie-detail.component';\n\nimport {TaskListComponent} from './task/task-list/task-list.component';\n\nconst routes: Routes = [\n  { path: 'movies', component: MoviesComponent },\n  { path: 'tasks', component: TaskListComponent },\n  { path: 'dashboard', component: DashboardComponent },\n  { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n  { path: 'detail/:id', component: MovieDetailComponent }\n];\n\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule {}\n","module.exports = \"\\nh1 {\\n  font-size: 2.0em;\\n  color: #999;\\n  margin-bottom: 0;\\n}\\nh2 {\\n  font-size: 1em;\\n  margin-top: 0;\\n  padding-top: 0;\\n}\\nnav a {\\n  padding: 5px 10px;\\n  text-decoration: none;\\n  margin-top: 10px;\\n  display: inline-block;\\n  background-color: #eee;\\n  border-radius: 4px;\\n}\\nnav a:visited, a:link {\\n  color: #607D8B;\\n}\\nnav a:hover {\\n  color: #039be5;\\n  background-color: #CFD8DC;\\n}\\nnav a.active {\\n  color: #039be5;\\n}\\nappdecoration {\\n   background-color: #CFD8DC;\\n   margin-top:300px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0VBQ0UsaUJBQWlCO0VBQ2pCLFlBQVk7RUFDWixpQkFBaUI7Q0FDbEI7QUFDRDtFQUNFLGVBQWU7RUFDZixjQUFjO0VBQ2QsZUFBZTtDQUNoQjtBQUNEO0VBQ0Usa0JBQWtCO0VBQ2xCLHNCQUFzQjtFQUN0QixpQkFBaUI7RUFDakIsc0JBQXNCO0VBQ3RCLHVCQUF1QjtFQUN2QixtQkFBbUI7Q0FDcEI7QUFDRDtFQUNFLGVBQWU7Q0FDaEI7QUFDRDtFQUNFLGVBQWU7RUFDZiwwQkFBMEI7Q0FDM0I7QUFDRDtFQUNFLGVBQWU7Q0FDaEI7QUFFRDtHQUNHLDBCQUEwQjtHQUMxQixpQkFBaUI7Q0FDbkIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuaDEge1xuICBmb250LXNpemU6IDIuMGVtO1xuICBjb2xvcjogIzk5OTtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cbmgyIHtcbiAgZm9udC1zaXplOiAxZW07XG4gIG1hcmdpbi10b3A6IDA7XG4gIHBhZGRpbmctdG9wOiAwO1xufVxubmF2IGEge1xuICBwYWRkaW5nOiA1cHggMTBweDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBtYXJnaW4tdG9wOiAxMHB4O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlZWU7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbn1cbm5hdiBhOnZpc2l0ZWQsIGE6bGluayB7XG4gIGNvbG9yOiAjNjA3RDhCO1xufVxubmF2IGE6aG92ZXIge1xuICBjb2xvcjogIzAzOWJlNTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0NGRDhEQztcbn1cbm5hdiBhLmFjdGl2ZSB7XG4gIGNvbG9yOiAjMDM5YmU1O1xufVxuXG5hcHBkZWNvcmF0aW9uIHtcbiAgIGJhY2tncm91bmQtY29sb3I6ICNDRkQ4REM7XG4gICBtYXJnaW4tdG9wOjMwMHB4O1xufVxuIl19 */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n \\n  <div class=\\\"appdecoration\\\">\\n\\n    <mat-icon svgIcon=\\\"home\\\"></mat-icon>\\n    <button mat-button [matMenuTriggerFor]=\\\"menu\\\">File</button>\\n    <mat-menu #menu=\\\"matMenu\\\">\\n        <button mat-menu-item>New</button>\\n        <button mat-menu-item (click)=\\\"openMovieList()\\\">Open</button>\\n        <button mat-menu-item>Recent</button>\\n        <button mat-menu-item>Upload</button>\\n        <button mat-menu-item>Link to Nextcloud</button>\\n        <button mat-menu-item>Export</button>\\n        <button mat-menu-item>Close</button>\\n      </mat-menu>\\n    <button mat-button [matMenuTriggerFor]=\\\"edit\\\">Edit</button>\\n    <mat-menu #edit=\\\"matMenu\\\">\\n        <button mat-menu-item>Copy</button>\\n        <button mat-menu-item>Cut</button>\\n        <button mat-menu-item>Paste</button>\\n         <button mat-menu-item>Search</button>\\n    </mat-menu>\\n    <button mat-button [matMenuTriggerFor]=\\\"view\\\">View</button>\\n    <mat-menu #view=\\\"matMenu\\\">\\n        <button mat-menu-item>Outline</button>\\n        <button mat-menu-item>OM Images</button>\\n        <button mat-menu-item>Audio track</button>\\n         <button mat-menu-item>Export</button>\\n    </mat-menu>\\n    <button mat-button [matMenuTriggerFor]=\\\"format\\\">Format</button>\\n    <mat-menu #format=\\\"matMenu\\\">\\n        <button mat-menu-item>Headings</button>\\n        <button mat-menu-item>Paragraph</button>\\n        <button mat-menu-item>Text</button>\\n         <button mat-menu-item>OM Images</button>\\n    </mat-menu>\\n    <button mat-button [matMenuTriggerFor]=\\\"format\\\">Analyze</button>\\n    <mat-menu #analyze=\\\"matMenu\\\">\\n        <button mat-menu-item>Cut Sructure</button>\\n        <button mat-menu-item>Audio Structure</button>\\n        <button mat-menu-item>Novements</button>\\n         <button mat-menu-item>Persons</button>\\n    </mat-menu>\\n    <button mat-button [matMenuTriggerFor]=\\\"window\\\">Window</button>\\n    <mat-menu #window=\\\"matMenu\\\">\\n        <button mat-menu-item>Score</button>\\n        <button mat-menu-item (click)=\\\"showTasks()\\\">Background Tasks</button>\\n        <button mat-menu-item>Help</button>\\n    </mat-menu>\\n\\n    <router-outlet></router-outlet>\\n  </div>\\n\\n\\n\"","import {Component, OnInit} from '@angular/core';\nimport {AppService} from './app.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\n\nexport class AppComponent implements OnInit {\n  title = 'Video Score';\n  msg: string;\n\n  constructor(private appService: AppService,\n              private router: Router) {\n  }\n\n  ngOnInit() {\n    this.appService.initStore().subscribe(data => this.msg = data['msg']);\n  }\n\n  openMovieList() {\n    this.router.navigateByUrl('/movies');\n  }\n\n  showTasks() {\n    this.router.navigateByUrl('/tasks');\n  }\n\n\n}\n","import { BrowserModule} from '@angular/platform-browser';\nimport { NgModule} from '@angular/core';\nimport { FormsModule} from '@angular/forms';\nimport { HttpClientModule} from '@angular/common/http';\n\n\nimport { AppComponent} from './app.component';\nimport { AppService} from './app.service';\nimport { MoviesComponent } from './movies/movies.component';\nimport { MovieDetailComponent } from './movie-detail/movie-detail.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { StripesComponent } from './stripes/stripes.component';\nimport { StripesOverlayComponent } from './stripes-overlay/stripes-overlay.component';\nimport { OMSubimageComponent } from './omsubimage/omsubimage.component';\nimport { OMImageComponent } from './omimage/omimage.component';\n\nimport { StoreRouterConnectingModule, routerReducer } from '@ngrx/router-store';\n\n// STORE\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { reducers } from './reducers';\n\nimport { MovieApiEffects } from './entities/movies-api.effects';\n\n\n\n \n// MATERIAL\nimport {MatCheckboxModule} from '@angular/material';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatMenuModule} from '@angular/material';\nimport {MatButtonModule} from '@angular/material';\nimport {MatIconModule} from '@angular/material';\n\n// TASKS\n\nimport {TaskModule} from './task/task.module';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MoviesComponent,\n    MovieDetailComponent,\n    MessagesComponent,\n    DashboardComponent,\n    StripesComponent,\n    StripesOverlayComponent,\n    OMSubimageComponent,\n    OMImageComponent\n  ],\n\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatCheckboxModule,\n    MatTableModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatIconModule,\n    TaskModule,\n    StoreModule.forRoot(reducers),\n    StoreDevtoolsModule.instrument({ maxAge: 25 }),\n    EffectsModule.forRoot([]),\n    EffectsModule.forFeature([MovieApiEffects]),\n    StoreRouterConnectingModule.forRoot()\n    ],\n\n  exports: [ MatCheckboxModule, MatMenuModule, MatIconModule ],\n\n  providers: [AppService],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule {\n}\n","import { HttpClient} from '@angular/common/http';\nimport { Injectable} from '@angular/core';\nimport { Observable, Subject, of } from 'rxjs';\n\n\nimport { Store, select } from '@ngrx/store';\nimport { Update } from '@ngrx/entity';\n\nimport { AppState } from './app-state/app-state';\n\nimport * as MovieActions from './entities/movie.actions';\nimport * as MovieAPIActions from './entities/movies-api.actions';\nimport * as TasksAPIActions from './task/task-api.actions';\n\n\nimport { Movie, MovieState } from './entities/movie.model';\n\n\nimport { SyncstoreService } from './syncstore.service';\nimport { SseService } from './sse.service';\n\n\n@Injectable()\nexport class AppService {\n\n  myData: any;\n\n  constructor(private  http: HttpClient,\n              private  syncstore: SyncstoreService,\n              public   store: Store<AppState>) {\n  }\n\n  initStore() {\n    console.log ('in the APP SERVICE class');\n    this.store.dispatch(new MovieAPIActions.LoadMovies ());\n    this.store.dispatch(new TasksAPIActions.LoadTasks ());\n  //  this.store.subscribe (v => console.log(v));\n    return this.http.get('/api/ping');\n  }\n\n \n}\n","module.exports = \"/* DashboardComponent's private CSS styles */\\n[class*='col-'] {\\n  float: left;\\n  padding-right: 20px;\\n  padding-bottom: 20px;\\n}\\n[class*='col-']:last-of-type {\\n  padding-right: 0;\\n}\\n.mmbox {\\n  display: flex;\\n  \\n}\\na {\\n  text-decoration: none;\\n}\\n*, *:after, *:before {\\n  box-sizing: border-box;\\n}\\nh3 {\\n  text-align: center;\\n  margin-bottom: 0;\\n}\\nh4 {\\n  position: relative;\\n}\\n.grid {\\n\\n  margin: 0;\\n}\\n.col-1-4 {\\n  width: 50%;\\n}\\n.module {\\n  padding: 20px;\\n  text-align: center;\\n  color: #eee;\\n  max-height: 120px;\\n  min-width: 120px;\\n  background-color: #607d8b;\\n  border-radius: 2px;\\n  white-space: nowrap;\\n}\\n.module:hover {\\n  background-color: #eee;\\n  cursor: pointer;\\n  color: #607d8b;\\n}\\n.grid-pad {\\n\\n  padding: 10px 0;\\n}\\n.grid-pad > [class*='col-']:last-of-type {\\n  padding-right: 20px;\\n}\\n@media (max-width: 600px) {\\n  .module {\\n    font-size: 10px;\\n    max-height: 75px; }\\n}\\n@media (max-width: 1024px) {\\n  .grid {\\n    margin: 0;\\n  }\\n  .module {\\n    min-width: 60px;\\n  }\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDZDQUE2QztBQUM3QztFQUNFLFlBQVk7RUFDWixvQkFBb0I7RUFDcEIscUJBQXFCO0NBQ3RCO0FBQ0Q7RUFDRSxpQkFBaUI7Q0FDbEI7QUFFRDtFQUNFLGNBQWM7O0NBRWY7QUFDRDtFQUNFLHNCQUFzQjtDQUN2QjtBQUNEO0VBR0UsdUJBQXVCO0NBQ3hCO0FBQ0Q7RUFDRSxtQkFBbUI7RUFDbkIsaUJBQWlCO0NBQ2xCO0FBQ0Q7RUFDRSxtQkFBbUI7Q0FDcEI7QUFDRDs7RUFFRSxVQUFVO0NBQ1g7QUFDRDtFQUNFLFdBQVc7Q0FDWjtBQUNEO0VBQ0UsY0FBYztFQUNkLG1CQUFtQjtFQUNuQixZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLGlCQUFpQjtFQUNqQiwwQkFBMEI7RUFDMUIsbUJBQW1CO0VBQ25CLG9CQUFvQjtDQUNyQjtBQUNEO0VBQ0UsdUJBQXVCO0VBQ3ZCLGdCQUFnQjtFQUNoQixlQUFlO0NBQ2hCO0FBQ0Q7O0VBRUUsZ0JBQWdCO0NBQ2pCO0FBQ0Q7RUFDRSxvQkFBb0I7Q0FDckI7QUFDRDtFQUNFO0lBQ0UsZ0JBQWdCO0lBQ2hCLGlCQUFpQixFQUFFO0NBQ3RCO0FBQ0Q7RUFDRTtJQUNFLFVBQVU7R0FDWDtFQUNEO0lBQ0UsZ0JBQWdCO0dBQ2pCO0NBQ0YiLCJmaWxlIjoic3JjL2FwcC9kYXNoYm9hcmQvZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBEYXNoYm9hcmRDb21wb25lbnQncyBwcml2YXRlIENTUyBzdHlsZXMgKi9cbltjbGFzcyo9J2NvbC0nXSB7XG4gIGZsb2F0OiBsZWZ0O1xuICBwYWRkaW5nLXJpZ2h0OiAyMHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMjBweDtcbn1cbltjbGFzcyo9J2NvbC0nXTpsYXN0LW9mLXR5cGUge1xuICBwYWRkaW5nLXJpZ2h0OiAwO1xufVxuXG4ubW1ib3gge1xuICBkaXNwbGF5OiBmbGV4O1xuICBcbn1cbmEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG4qLCAqOmFmdGVyLCAqOmJlZm9yZSB7XG4gIC13ZWJraXQtYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLW1vei1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuaDMge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG5oNCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cbi5ncmlkIHtcblxuICBtYXJnaW46IDA7XG59XG4uY29sLTEtNCB7XG4gIHdpZHRoOiA1MCU7XG59XG4ubW9kdWxlIHtcbiAgcGFkZGluZzogMjBweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBjb2xvcjogI2VlZTtcbiAgbWF4LWhlaWdodDogMTIwcHg7XG4gIG1pbi13aWR0aDogMTIwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICM2MDdkOGI7XG4gIGJvcmRlci1yYWRpdXM6IDJweDtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbn1cbi5tb2R1bGU6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWVlO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGNvbG9yOiAjNjA3ZDhiO1xufVxuLmdyaWQtcGFkIHtcblxuICBwYWRkaW5nOiAxMHB4IDA7XG59XG4uZ3JpZC1wYWQgPiBbY2xhc3MqPSdjb2wtJ106bGFzdC1vZi10eXBlIHtcbiAgcGFkZGluZy1yaWdodDogMjBweDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xuICAubW9kdWxlIHtcbiAgICBmb250LXNpemU6IDEwcHg7XG4gICAgbWF4LWhlaWdodDogNzVweDsgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAuZ3JpZCB7XG4gICAgbWFyZ2luOiAwO1xuICB9XG4gIC5tb2R1bGUge1xuICAgIG1pbi13aWR0aDogNjBweDtcbiAgfVxufVxuIl19 */\"","module.exports = \"<h3>Movies</h3>\\n\\n<div class=\\\"mmbox\\\">\\n<div class=\\\"grid grid-pad\\\">\\n  <a *ngFor=\\\"let movie of movies$ | async\\\" class=\\\"col-1-4\\\"\\n    routerLink=\\\"/detail/{{movie.id}}\\\">\\n    <div class=\\\"module movie\\\">\\n      <h4>{{movie.name}}</h4>\\n    </div>\\n\\n  </a>\\n</div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { Observable, of } from 'rxjs';\n\nimport { MovieService } from '../movie.service';\nimport { Movie } from '../entities/movie.model';\nimport { selectAllMovies } from '../entities/movie.selectors';\nimport { AppState } from '../app-state/app-state';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: [ './dashboard.component.css' ]\n})\n\nexport class DashboardComponent implements OnInit {\n\n  movies$: Observable<Movie[]> = this.store.pipe(select(selectAllMovies))\n\n  constructor(private movieService: MovieService, \n              public   store: Store<AppState> ) { }\n\n  ngOnInit() {\n  }\n\n\n}\n","import { Action } from '@ngrx/store';\nimport { Update } from '@ngrx/entity';\nimport { Movie } from './movie.model';\n\nexport enum MovieActionTypes {\n  LoadMovies =   '[Movie] Load Movies',\n  AddMovie =     '[Movie] Add Movie',\n  UpsertMovie =  '[Movie] Upsert Movie',\n  AddMovies =    '[Movie] Add Movies',\n  UpsertMovies = '[Movie] Upsert Movies',\n  UpdateMovie =  '[Movie] Update Movie',\n  UpdateMovies = '[Movie] Update Movies',\n  DeleteMovie =  '[Movie] Delete Movie',\n  DeleteMovies = '[Movie] Delete Movies',\n  ClearMovies =  '[Movie] Clear Movies'\n}\n\nexport class LoadMovies implements Action {\n  readonly type = MovieActionTypes.LoadMovies;\n\n  constructor(public payload: { movies: Movie[] }) {}\n}\n\nexport class AddMovie implements Action {\n  readonly type = MovieActionTypes.AddMovie;\n\n  constructor(public payload: { movie: Movie }) {}\n}\n\nexport class UpsertMovie implements Action {\n  readonly type = MovieActionTypes.UpsertMovie;\n\n  constructor(public payload: { movie: Movie }) {}\n}\n\nexport class AddMovies implements Action {\n  readonly type = MovieActionTypes.AddMovies;\n\n  constructor(public payload: { movies: Movie[] }) {}\n}\n\nexport class UpsertMovies implements Action {\n  readonly type = MovieActionTypes.UpsertMovies;\n\n  constructor(public payload: { movies: Movie[] }) {}\n}\n\nexport class UpdateMovie implements Action {\n  readonly type = MovieActionTypes.UpdateMovie;\n\n  constructor(public payload: { movie: Update<Movie> }) {}\n}\n\nexport class UpdateMovies implements Action {\n  readonly type = MovieActionTypes.UpdateMovies;\n\n  constructor(public payload: { movies: Update<Movie>[] }) {}\n}\n\nexport class DeleteMovie implements Action {\n  readonly type = MovieActionTypes.DeleteMovie;\n\n  constructor(public payload: { id: string }) {}\n}\n\nexport class DeleteMovies implements Action {\n  readonly type = MovieActionTypes.DeleteMovies;\n\n  constructor(public payload: { ids: string[] }) {}\n}\n\nexport class ClearMovies implements Action {\n  readonly type = MovieActionTypes.ClearMovies;\n}\n\nexport type MovieActions =\n LoadMovies\n | AddMovie\n | UpsertMovie\n | AddMovies\n | UpsertMovies\n | UpdateMovie\n | UpdateMovies\n | DeleteMovie\n | DeleteMovies\n | ClearMovies;\n","import { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\nimport { Movie } from './movie.model';\nimport { MovieActions, MovieActionTypes } from './movie.actions';\nimport { nsend } from 'q';\nimport { Update } from '@ngrx/entity';\n\nexport interface State extends EntityState<Movie> {\n  // additional entities state properties\n}\n\nfunction sortByMovieID(e1: Movie, e2: Movie) {\n  return e1.id - e2.id;\n}\n\n\nexport const adapter: EntityAdapter<Movie> = createEntityAdapter<Movie>(\n  {\n    sortComparer: sortByMovieID\n  }\n);\n\nexport const initialState: State = adapter.getInitialState({\n  // additional entity state properties\n});\n\nexport function reducer(\n  state = initialState,\n  action: MovieActions\n): State {\n  switch (action.type) {\n\n    case MovieActionTypes.AddMovie: {\n      return adapter.addOne(action.payload.movie, state);\n    }\n\n    case MovieActionTypes.UpsertMovie: {\n      return adapter.upsertOne(action.payload.movie, state);\n    }\n\n    case MovieActionTypes.AddMovies: {\n      return adapter.addMany(action.payload.movies, state);\n    }\n\n    case MovieActionTypes.UpsertMovies: {\n      return adapter.upsertMany(action.payload.movies, state);\n    }\n\n    case MovieActionTypes.UpdateMovie: {\n      const ns = adapter.updateOne(action.payload.movie, state);\n      return ns;\n    }\n\n    case MovieActionTypes.UpdateMovies: {\n      return adapter.updateMany(action.payload.movies, state);\n    }\n\n    case MovieActionTypes.DeleteMovie: {\n      return adapter.removeOne(action.payload.id, state);\n    }\n\n    case MovieActionTypes.DeleteMovies: {\n      return adapter.removeMany(action.payload.ids, state);\n    }\n\n    case MovieActionTypes.LoadMovies: {\n      return adapter.addAll(action.payload.movies, state);\n    }\n\n    case MovieActionTypes.ClearMovies: {\n      return adapter.removeAll(state);\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n\nexport const {\n  selectIds,\n  selectEntities,\n  selectAll,\n  selectTotal,\n} = adapter.getSelectors();\n","import { createSelector } from '@ngrx/store';\nimport { adapter } from './movie.reducer';\nimport { Movie, MovieState } from './movie.model';\nimport { AppState} from '../app-state/app-state';\n\nconst { selectEntities, selectAll } = adapter.getSelectors();\n\n\nexport const selectMovieState = (state: AppState) => state.movies;\n\nexport const selectAllMovies  = createSelector(\n  selectMovieState,\n  selectAll);\n\n  export const selectMoviesEntities = createSelector(\n    selectMovieState,\n    selectEntities);\n\nexport const selectMovie = createSelector(\n  selectMoviesEntities,\n  movie => (id: number) => movie[id]\n);\n\n\n\n","import { Action } from '@ngrx/store';\nimport { Update } from '@ngrx/entity';\nimport { Movie } from './movie.model';\n\nexport enum MoviesAPIActionTypes {\n  LoadMovies       = '[Movies API] Load Movies',\n  LoadMoviesSucess = '[Movies API] Load Movies Success',\n  LoadMoviesError  = '[Movies API] Load Movies Error',\n  AddMovie         = '[Movies API] Add Movie',\n  AddMovieSucess   = '[Movies API] Add Success',\n  AddMovieError    = '[Movies API] Add Error',\n  SyncMovie        = '[Movies API] Sync Movie'\n}\n\nexport class LoadMovies implements Action {\n  readonly type = MoviesAPIActionTypes.LoadMovies;\n}\n\nexport class LoadMoviesSucess implements Action {\n  readonly type = MoviesAPIActionTypes.LoadMoviesSucess;\n}\n\nexport class LoadMoviesError implements Action {\n  readonly type = MoviesAPIActionTypes.LoadMoviesError;\n}\n\nexport class AddMovie implements Action {\n  readonly type = MoviesAPIActionTypes.AddMovie;\n}\n\nexport class AddMovieSucess implements Action {\n  readonly type = MoviesAPIActionTypes.AddMovieSucess;\n}\n\nexport class AddMovieError implements Action {\n  readonly type = MoviesAPIActionTypes.AddMovieError;\n}\n\nexport class SyncMovie implements Action {\n  readonly type = MoviesAPIActionTypes.SyncMovie;\n  constructor(public payload: { movie: Update<Movie> }) {}\n}\n\nexport type MoviesAPIActions =\nLoadMovies\n  | LoadMoviesSucess\n  | LoadMoviesError\n  | AddMovie\n  | AddMovieSucess\n  | AddMovieError\n  | SyncMovie ;\n","import { Injectable } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { HttpClient} from '@angular/common/http';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { map, tap, mergeMap, catchError, finalize, concatMap } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\n\nimport { Movie } from './movie.model';\n\nimport * as MovieActions from './movie.actions';\nimport * as APIActions from './movies-api.actions';\n\n\nimport { AppState } from '../app-state/app-state';\n\n@Injectable()\nexport class MovieApiEffects {\n\n  private movieAPI = '/api/movies';  // URL to web api\n\n  @Effect()\n  loadMovies$ = this.actions$\n  .pipe(\n    ofType(APIActions.MoviesAPIActionTypes.LoadMovies),\n    mergeMap(() => this.http.get<Movie[]>(this.movieAPI)\n      .pipe\n      (\n        map (movies => (new MovieActions.LoadMovies ({movies: movies})) ),\n        catchError(() => of({ type: '[Movie] Movies Loaded Error' })),\n        finalize(() => this.store.dispatch(new APIActions.LoadMoviesSucess ()))\n      )\n\n    )\n  );\n\n  @Effect()\n  syncMovie$ = this.actions$\n  .pipe(\n    ofType<APIActions.SyncMovie>(APIActions.MoviesAPIActionTypes.SyncMovie),\n//    tap (() => console.log('have to sync a movie')),\n    concatMap( syncaction => [\n      new MovieActions.UpdateMovie( {movie: syncaction.payload.movie} )\n    ])\n  );\n\n\n  constructor(\n    private  http: HttpClient,\n    private  actions$: Actions,\n    public   store: Store<AppState>\n  ) {\n  }\n}\n","import { Action } from '@ngrx/store';\nimport { MoviesAPIActions, MoviesAPIActionTypes } from './movies-api.actions';\nimport { ConditionalExpr } from '@angular/compiler';\nimport { AppState} from '../app-state/app-state';\n\n\nexport interface State  {\n  pending: false;\n  error: null;\n}\n\nexport const initialState: State = {\n  pending: false,\n  error: null\n};\n\nexport function reducer(\n  state = initialState,\n  action: MoviesAPIActions\n  ): State {\n  switch (action.type) {\n\n    case MoviesAPIActionTypes.LoadMovies: {\n      console.log ('MoviesAPIActionTypes.LoadMovies');\n      return Object.assign({}, state, {pending: true, error: null});\n    }\n    case MoviesAPIActionTypes.LoadMoviesSucess: {\n      console.log ('MoviesAPIActionTypes.LoadMoviesSucess');\n      return Object.assign({}, state, {pending: false});\n    }\n    case MoviesAPIActionTypes.LoadMoviesError: {\n      return Object.assign({}, state, {pending: false, error: 'ERROR'});\n    }\n\n    default:\n      return state;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessageService {\n  messages: string[] = [];\n\n  add(message: string) {\n    this.messages.push(message);\n  }\n\n  clear() {\n    this.messages = [];\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lc3NhZ2VzL21lc3NhZ2VzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div *ngIf=\\\"messageService.messages.length\\\">\\n\\n  <h2>Messages</h2>\\n  <button class=\\\"clear\\\"\\n          (click)=\\\"messageService.clear()\\\">clear</button>\\n\\n  <div *ngFor='let message of messageService.messages'> {{message}}\\n\\n  </div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MessageService } from '../message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor(public messageService: MessageService) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".omi {\\n  display: inline;\\n}\\n\\n.subomi {\\n  display: inline;\\n}\\n\\nlabel {\\n    display: inline-block;\\n    width: 5em;\\n    margin: .5em 0;\\n    color: #607D8B;\\n    font-weight: bold;\\n  }\\n\\ninput {\\n    height: 2em;\\n    width: 40em;\\n    font-size: 1em;\\n    padding-left: .4em;\\n  }\\n\\nbutton {\\n    margin-top: 20px;\\n    font-family: Arial;\\n    background-color: #eee;\\n    border: none;\\n    padding: 5px 10px;\\n    border-radius: 4px;\\n    cursor: pointer; cursor: hand;\\n  }\\n\\nbutton:hover {\\n    background-color: #cfd8dc;\\n  }\\n\\nbutton:disabled {\\n    background-color: #eee;\\n    color: #ccc;\\n    cursor: auto;\\n  }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW92aWUtZGV0YWlsL21vdmllLWRldGFpbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCO0NBQ2pCOztBQUVEO0VBQ0UsZ0JBQWdCO0NBQ2pCOztBQUVEO0lBQ0ksc0JBQXNCO0lBQ3RCLFdBQVc7SUFDWCxlQUFlO0lBQ2YsZUFBZTtJQUNmLGtCQUFrQjtHQUNuQjs7QUFDRDtJQUNFLFlBQVk7SUFDWixZQUFZO0lBQ1osZUFBZTtJQUNmLG1CQUFtQjtHQUNwQjs7QUFDRDtJQUNFLGlCQUFpQjtJQUNqQixtQkFBbUI7SUFDbkIsdUJBQXVCO0lBQ3ZCLGFBQWE7SUFDYixrQkFBa0I7SUFDbEIsbUJBQW1CO0lBQ25CLGdCQUFnQixDQUFDLGFBQWE7R0FDL0I7O0FBQ0Q7SUFDRSwwQkFBMEI7R0FDM0I7O0FBQ0Q7SUFDRSx1QkFBdUI7SUFDdkIsWUFBWTtJQUNaLGFBQWE7R0FDZCIsImZpbGUiOiJzcmMvYXBwL21vdmllLWRldGFpbC9tb3ZpZS1kZXRhaWwuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5vbWkge1xuICBkaXNwbGF5OiBpbmxpbmU7XG59XG5cbi5zdWJvbWkge1xuICBkaXNwbGF5OiBpbmxpbmU7XG59XG5cbmxhYmVsIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgd2lkdGg6IDVlbTtcbiAgICBtYXJnaW46IC41ZW0gMDtcbiAgICBjb2xvcjogIzYwN0Q4QjtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgfVxuICBpbnB1dCB7XG4gICAgaGVpZ2h0OiAyZW07XG4gICAgd2lkdGg6IDQwZW07XG4gICAgZm9udC1zaXplOiAxZW07XG4gICAgcGFkZGluZy1sZWZ0OiAuNGVtO1xuICB9XG4gIGJ1dHRvbiB7XG4gICAgbWFyZ2luLXRvcDogMjBweDtcbiAgICBmb250LWZhbWlseTogQXJpYWw7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2VlZTtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgcGFkZGluZzogNXB4IDEwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgIGN1cnNvcjogcG9pbnRlcjsgY3Vyc29yOiBoYW5kO1xuICB9XG4gIGJ1dHRvbjpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2NmZDhkYztcbiAgfVxuICBidXR0b246ZGlzYWJsZWQge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNlZWU7XG4gICAgY29sb3I6ICNjY2M7XG4gICAgY3Vyc29yOiBhdXRvO1xuICB9XG4iXX0= */\"","module.exports = \"<div *ngIf=(movies$|async)(id)>\\n\\n  <br>\\n  <a href=\\\"{{(movies$|async)(id).uri}}\\\" target=\\\"_blank\\\"> {{(movies$|async)(id).name}}</a>\\n  <br />\\n  stripes:{{(movies$|async)(id).stripeStatus}}&#37; cuts: {{(movies$|async)(id).cutStatus}}&#37;\\n  <div>\\n    <button (click)=\\\"computeStripes()\\\">(re)compute stripes</button>\\n    <button (click)=\\\"computeCuts()\\\">(re)compute cuts</button>\\n    <button (click)=\\\"goBack()\\\">go back</button>\\n  </div>\\n  <br />\\n\\n  <ng-container *ngFor='let omi of omimages$ | async'>\\n    <app-omimage [startFN]=\\\"omi.startFN\\\" [endFN]=\\\"omi.endFN\\\"  ></app-omimage>\\n  </ng-container>\\n</div>\\n\\n<app-stripes></app-stripes>\"","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\n\nimport { startWith, switchMap, takeWhile} from \"rxjs/operators\";\nimport { interval} from \"rxjs/internal/observable/interval\";\nimport { Observable, of } from 'rxjs';\nimport { map, tap, take, mergeMap, catchError, finalize } from 'rxjs/operators';\n\nimport { Store, select } from '@ngrx/store';\n\nimport { AppState } from '../app-state/app-state';\n\nimport { Movie } from '../entities/movie.model';\nimport { Cut } from '../cut';\n\nimport { selectAllMovies, selectMovie, selectMoviesEntities } from '../entities/movie.selectors';\nimport { MovieService } from '../movie.service';\nimport { StripesComponent } from '../stripes/stripes.component';\nimport { OMImageComponent } from '../omimage/omimage.component';\n\n// <app-stripes></app-stripes>\n\n// import {MatButtonModule, MatCheckboxModule} from '@angular/material';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { CompileShallowModuleMetadata } from '@angular/compiler';\n\n\ninterface OMimage {\n  id: number;\n  startFN: number;\n  endFN: number;\n}\n\n@Component({\n  selector: 'app-movie-detail',\n  templateUrl: './movie-detail.component.html',\n  styleUrls: ['./movie-detail.component.css']\n})\n\nexport class MovieDetailComponent implements OnInit, OnDestroy {\n\n  @Input() movie: Movie;\n\n  movies$ = this.store.pipe(select(selectMovie));\n  omimages$: Observable<OMimage[]>;\n\n  private  id: number;\n\n  constructor(\n    private  route: ActivatedRoute,\n    private  movieService: MovieService,\n    private  location: Location,\n    public   store: Store<AppState>) { }\n\n  ngOnDestroy() {\n  }\n\n  ngOnInit() {\n //   this.id = parseInt(this.route.snapshot.paramMap.get('id'));\n    this.id = parseInt( this.route.snapshot.paramMap.get('id'), 10);\n  //  this.store.subscribe ( s  => console.log(s) );\n\n\n  this.omimages$ = this.movieService.getCuts(this.id).pipe (\n    map ( cuts => this.makeOMImageDataStructure(cuts))\n      );\n  }\n\n  makeOMImageDataStructure (cuts: Cut[]): OMimage[] {\n    const omsl: OMimage[] = [];\n    let i = 0;\n    let start = 0;\n    for (const c of cuts) {\n      const om: OMimage = {id: i, startFN: start, endFN: c.fn - 1 };\n      omsl.push (om);\n      //console.log (i, om);\n      start = c.fn;\n      i += 1;\n    }\n    return omsl;\n  }\n\n  assignMovie (movie: Movie) {\n    this.movie = movie;\n    console.log('Movie Data Structures, received from the Movie Service');\n    console.log (movie);\n    console.log (movie.stripeStatus);\n  }\n\n\n  goBack(): void {\n      this.location.back();\n  }\n\n  computeStripes(): void {\n    console.log('Start the Compute Stripes Process');\n    this.store.pipe(\n      take(1),\n      select(selectMovie),\n      map( f => f(this.id),\n      tap( m => console.log(m)))\n      ).subscribe(m => this.movieService.computeStripe(m.id));\n  }\n\n computeCuts(): void {\n    console.log('Start the Compute Cut Process');\n    this.store.pipe(\n      take(1),\n      select(selectMovie),\n      map( f => f(this.id))\n      ).subscribe(m => this.movieService.computeCuts(m.id));\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Stripe } from './stripe';\nimport { Cut } from './cut';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { MessageService } from './message.service';\nimport { Movie, MovieState } from './entities/movie.model';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({ providedIn: 'root' })\nexport class MovieService {\n\n  private movieAPI = '/api/movies';  // URL to web api\n\n  constructor( private messageService: MessageService,\n               private http: HttpClient) { }\n\n  /** Log a HeroService message with the MessageService */\n  private log(message: string) {\n    this.messageService.add(`MovieService: ${message}`);\n  }\n\n  private handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  getStripes(id: number): Observable<Stripe[]> {\n    const url = `/api/movie/${id}/stripes`;\n    return this.http.get<Stripe[]>(url).pipe(\n      tap(_ => this.log(`fetched stripes for id=${id}`)),\n      catchError(this.handleError<Stripe[]>(`getStripes id=${id}`))\n    );\n  }\n\n  getCuts(id: number): Observable<Cut[]> {\n    const url = `/api/movie/${id}/cuts`;\n    return this.http.get<Cut[]>(url).pipe(\n      tap(_ => this.log(`fetched cuts for id=${id}`)),\n      catchError(this.handleError<Cut[]>(`getCuts id=${id}`))\n    );\n  }\n\n  /** DELETE: delete the hero from the server */\n  deleteMovie(movie: Movie | number): Observable<Movie> {\n\n    const id = typeof movie === 'number' ? movie : movie.id;\n    const url = `/api/movie/${id}`;\n\n    return this.http.delete<Movie>(url, httpOptions).pipe(\n      tap(_ => this.log(`deleted movie id=${id}`)),\n      catchError(this.handleError<Movie>('deleteMovie'))\n    );\n  }\n\n computeStripe(id: number) {\n\n    console.log('Compute Stripes Process in MOVIE SERVICES');\n    const url = `/api/movie/${id}/command`;\n    const command = `{ \"command\": \"[MOVIE] MAKE STRIPES\", \"parameters\": {\"silent\": \"true\"} }`;\n    console.log(url, command);\n\n    this.http.post(url, command, httpOptions).pipe(\n      tap(_ => this.log(`generate stripes id=${id}`)),\n      catchError(this.handleError<Movie>('computeStripe'))\n    ).subscribe(() => console.log('command done'));\n  }\n\n computeCuts (id: number) {\n\n    console.log('Compute Cut Process in MOVIE SERVICES');\n    const url = `/api/movie/${id}/command`;\n    const command = `{ \"command\": \"[MOVIE] ANALYZE CUTS\", \"parameters\": {\"silent\": \"true\"} }`;\n\n    this.http.post<Movie>(url, command, httpOptions).pipe(\n      tap(_ => this.log(`compute cuts movie id=${id}`)),\n      catchError(this.handleError<Movie>('computeCuts'))\n    ).subscribe(() => console.log('command done'));\n  }\n\n\n\n\n\n}\n","module.exports = \"/* Movies Component's private CSS styles */\\n\\ntable {\\n  width: 100%;\\n}\\n\\n.selected {\\n  background-color: #CFD8DC !important;\\n  color: white;\\n}\\n\\n.movies {\\n  margin: 0 0 2em 0;\\n  list-style-type: none;\\n  padding: 0;\\n  position: left;\\n  width: 45em;\\n  text-align: left;\\n}\\n\\n.movies li {\\n  cursor: pointer;\\n  position: relative;\\n  left: 0;\\n  background-color: #EEE;\\n  margin: .5em;\\n  padding: .3em 0;\\n  height: 1.6em;\\n  border-radius: 4px;\\n}\\n\\n.movies li.selected:hover {\\n  background-color: #BBD8DC !important;\\n  color: white;\\n}\\n\\n.movies li:hover {\\n  color: #607D8B;\\n  background-color: #DDD;\\n  left: .1em;\\n}\\n\\n.movies .text {\\n  position: relative;\\n  top: -3px;\\n}\\n\\n.movies .badge {\\n  display: inline-block;\\n  font-size: small;\\n  color: white;\\n  padding: 0.8em 0.7em 0 0.7em;\\n  background-color: #607D8B;\\n  line-height: 1em;\\n  position: relative;\\n  left: -1px;\\n  top: -4px;\\n  height: 1.8em;\\n  margin-right: .8em;\\n  border-radius: 4px 0 0 4px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW92aWVzL21vdmllcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDJDQUEyQzs7QUFFM0M7RUFDRSxZQUFZO0NBQ2I7O0FBR0Q7RUFDRSxxQ0FBcUM7RUFDckMsYUFBYTtDQUNkOztBQUNEO0VBQ0Usa0JBQWtCO0VBQ2xCLHNCQUFzQjtFQUN0QixXQUFXO0VBQ1gsZUFBZTtFQUNmLFlBQVk7RUFDWixpQkFBaUI7Q0FDbEI7O0FBQ0Q7RUFDRSxnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLFFBQVE7RUFDUix1QkFBdUI7RUFDdkIsYUFBYTtFQUNiLGdCQUFnQjtFQUNoQixjQUFjO0VBQ2QsbUJBQW1CO0NBQ3BCOztBQUNEO0VBQ0UscUNBQXFDO0VBQ3JDLGFBQWE7Q0FDZDs7QUFDRDtFQUNFLGVBQWU7RUFDZix1QkFBdUI7RUFDdkIsV0FBVztDQUNaOztBQUNEO0VBQ0UsbUJBQW1CO0VBQ25CLFVBQVU7Q0FDWDs7QUFDRDtFQUNFLHNCQUFzQjtFQUN0QixpQkFBaUI7RUFDakIsYUFBYTtFQUNiLDZCQUE2QjtFQUM3QiwwQkFBMEI7RUFDMUIsaUJBQWlCO0VBQ2pCLG1CQUFtQjtFQUNuQixXQUFXO0VBQ1gsVUFBVTtFQUNWLGNBQWM7RUFDZCxtQkFBbUI7RUFDbkIsMkJBQTJCO0NBQzVCIiwiZmlsZSI6InNyYy9hcHAvbW92aWVzL21vdmllcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogTW92aWVzIENvbXBvbmVudCdzIHByaXZhdGUgQ1NTIHN0eWxlcyAqL1xuXG50YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG5cbi5zZWxlY3RlZCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNDRkQ4REMgIWltcG9ydGFudDtcbiAgY29sb3I6IHdoaXRlO1xufVxuLm1vdmllcyB7XG4gIG1hcmdpbjogMCAwIDJlbSAwO1xuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG4gIHBvc2l0aW9uOiBsZWZ0O1xuICB3aWR0aDogNDVlbTtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbn1cbi5tb3ZpZXMgbGkge1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbGVmdDogMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0VFRTtcbiAgbWFyZ2luOiAuNWVtO1xuICBwYWRkaW5nOiAuM2VtIDA7XG4gIGhlaWdodDogMS42ZW07XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbn1cbi5tb3ZpZXMgbGkuc2VsZWN0ZWQ6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjQkJEOERDICFpbXBvcnRhbnQ7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cbi5tb3ZpZXMgbGk6aG92ZXIge1xuICBjb2xvcjogIzYwN0Q4QjtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0RERDtcbiAgbGVmdDogLjFlbTtcbn1cbi5tb3ZpZXMgLnRleHQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRvcDogLTNweDtcbn1cbi5tb3ZpZXMgLmJhZGdlIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBmb250LXNpemU6IHNtYWxsO1xuICBjb2xvcjogd2hpdGU7XG4gIHBhZGRpbmc6IDAuOGVtIDAuN2VtIDAgMC43ZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICM2MDdEOEI7XG4gIGxpbmUtaGVpZ2h0OiAxZW07XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbGVmdDogLTFweDtcbiAgdG9wOiAtNHB4O1xuICBoZWlnaHQ6IDEuOGVtO1xuICBtYXJnaW4tcmlnaHQ6IC44ZW07XG4gIGJvcmRlci1yYWRpdXM6IDRweCAwIDAgNHB4O1xufVxuIl19 */\"","module.exports = \"<table mat-table [dataSource]=\\\"movies$|async\\\" class=\\\"mat-elevation-z8\\\">\\n\\n  <!--- Note that these columns can be defined in any order.\\n        The actual rendered columns are set as a property on the row definition\\\" -->\\n\\n  <!-- Position Column -->\\n  <ng-container matColumnDef=\\\"id\\\">\\n    <th mat-header-cell *matHeaderCellDef> ID </th>\\n    <td mat-cell *matCellDef=\\\"let m\\\"> {{m.id}} </td>\\n  </ng-container>\\n\\n  <!-- Name Column -->\\n  <ng-container matColumnDef=\\\"name\\\">\\n    <th mat-header-cell *matHeaderCellDef> Name </th>\\n      <td mat-cell *matCellDef=\\\"let m\\\"> \\n        <a routerLink=\\\"/detail/{{m.id}}\\\"> {{m.name}}</a> \\n  </td>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"stripe\\\">\\n    <th mat-header-cell *matHeaderCellDef> Stripes </th>\\n      <td mat-cell *matCellDef=\\\"let m\\\"> \\n        {{m.stripeStatus}} &#37; \\n  </td>\\n  </ng-container>\\n  \\n  <ng-container matColumnDef=\\\"cut\\\">\\n    <th mat-header-cell *matHeaderCellDef> Cuts </th>\\n      <td mat-cell *matCellDef=\\\"let m\\\"> \\n        {{m.cutStatus}} &#37; \\n  </td>\\n  </ng-container>\\n\\n  <!-- Weight Column -->\\n  <ng-container matColumnDef=\\\"uri\\\">\\n    <th mat-header-cell *matHeaderCellDef> Link </th>\\n    <td mat-cell *matCellDef=\\\"let m\\\"> \\n        <a href=\\\"{{m.uri}}\\\" target=\\\"_blank\\\"> {{m.uri}}</a>       \\n  </ng-container>\\n\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n</table>\"","import { Component, OnInit } from '@angular/core';\nimport { MovieService } from '../movie.service';\nimport { Movie } from '../entities/movie.model';\nimport { ConditionalExpr } from '@angular/compiler';\n\nimport { Observable, of } from 'rxjs';\nimport { filter, map, find, skip, take, tap, delay, mapTo, concat } from 'rxjs/operators';\n\n\nimport { Store, select } from '@ngrx/store';\n\nimport { UpsertMovie, DeleteMovie } from '../entities/movie.actions';\nimport { selectAllMovies, selectMoviesEntities } from '../entities/movie.selectors';\n\nimport { AppState } from '../app-state/app-state';\n\n\n\n@Component({\n  selector: 'app-movies',\n  templateUrl: './movies.component.html',\n  styleUrls: ['./movies.component.css']\n})\n\nexport class MoviesComponent implements OnInit {\n\n  movies$: any         = this.store.pipe(select(selectAllMovies));\n  movientitiedes$: any = this.store.pipe(select(selectMoviesEntities));\n\n  displayedColumns: string[] = ['id', 'name', 'stripe', 'cut', 'uri'];\n\n  constructor( private  store: Store<AppState> ) { }\n\n  ngOnInit() {\n     // this.store.subscribe ( s  => console.log(s) );\n  }\n\n}\n","module.exports = \".outerdiv {\\n  position: relative;\\n  display: inline;\\n}\\n\\n.omcanvas {\\n/*  position: absolute; */\\n  z-index: 0;\\n}\\n\\n.overlaycanvas {\\n  position: absolute;\\n  z-index: 100;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvb21pbWFnZS9vbWltYWdlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxtQkFBbUI7RUFDbkIsZ0JBQWdCO0NBQ2pCOztBQUVEO0FBQ0EsMEJBQTBCO0VBQ3hCLFdBQVc7Q0FDWjs7QUFFRDtFQUNFLG1CQUFtQjtFQUNuQixhQUFhO0NBQ2QiLCJmaWxlIjoic3JjL2FwcC9vbWltYWdlL29taW1hZ2UuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5vdXRlcmRpdiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogaW5saW5lO1xufVxuXG4ub21jYW52YXMge1xuLyogIHBvc2l0aW9uOiBhYnNvbHV0ZTsgKi9cbiAgei1pbmRleDogMDtcbn1cblxuLm92ZXJsYXljYW52YXMge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IDEwMDtcbn1cbiJdfQ== */\"","module.exports = \"\\n <ng-container *ngFor='let somi of subomis'>\\n          <app-omsubimage  [startFN]=\\\"somi.startFN\\\" [endFN]=\\\"somi.endFN\\\" [centerFN]=\\\"somi.centerFN\\\"></app-omsubimage>\\n  </ng-container>\\n^\"","import { Component, ElementRef, OnInit, Input } from '@angular/core';\nimport { Renderer, ViewChild } from '@angular/core'\n\nimport { Observable, of } from 'rxjs';\nimport { map, tap, take, mergeMap, catchError, finalize } from 'rxjs/operators';\n\nimport { ActivatedRoute } from '@angular/router';\nimport { MovieService } from '../movie.service';\nimport { Stripe } from '../stripe';\nimport { Cut } from '../cut';\n\nimport { Store, select } from '@ngrx/store';\nimport { AppState } from '../app-state/app-state';\nimport { selectAllMovies, selectMovie, selectMoviesEntities } from '../entities/movie.selectors';\n\nimport { Movie } from '../entities/movie.model';\nimport { OMSubimageComponent } from '../omsubimage/omsubimage.component';\n\ninterface OMSubimage {\n  centerFN: number;\n  startFN: number;\n  endFN: number;\n}\n\n@Component({\n  selector: 'app-omimage',\n  templateUrl: './omimage.component.html',\n  styleUrls: ['./omimage.component.css']\n})\n\n\nexport class OMImageComponent implements OnInit {\n\n  @Input() startFN: number;\n  @Input() endFN: number;\n  n: number;\n  subomis: OMSubimage[];\n\n  constructor(private renderer: Renderer,\n              private  movieService: MovieService,\n              public   store: Store<AppState>,\n              private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.n = Math.ceil ((this.endFN - this.startFN + 1) / 25 / 5);\n    const delta = (this.endFN - this.startFN + 1)  / this.n;\n    this.subomis = [];\n\n //   console.log (this.n, this.delta);\n\n    for (let num = 0; num < this.n ; num++) {\n      const sfn = Math.round (this.startFN  + num * delta);\n      const efn = Math.round (sfn + delta - 1);\n      const cfn = Math.round ((sfn + efn) / 2.0);\n\n      const subomi: OMSubimage = {centerFN: cfn, startFN: sfn, endFN: efn};\n      this.subomis.push (subomi);\n    }\n\n   // console.log (this.subomis);\n  }\n}\n","module.exports = \".outerdiv {\\n  position: relative;\\n  display: inline;\\n}\\n\\n.omcanvas {\\n/*  position: absolute; */\\n  z-index: 0;\\n}\\n\\n.overlaycanvas {\\n  position: absolute;\\n  z-index: 100;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvb21zdWJpbWFnZS9vbXN1YmltYWdlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxtQkFBbUI7RUFDbkIsZ0JBQWdCO0NBQ2pCOztBQUVEO0FBQ0EsMEJBQTBCO0VBQ3hCLFdBQVc7Q0FDWjs7QUFFRDtFQUNFLG1CQUFtQjtFQUNuQixhQUFhO0NBQ2QiLCJmaWxlIjoic3JjL2FwcC9vbXN1YmltYWdlL29tc3ViaW1hZ2UuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5vdXRlcmRpdiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogaW5saW5lO1xufVxuXG4ub21jYW52YXMge1xuLyogIHBvc2l0aW9uOiBhYnNvbHV0ZTsgKi9cbiAgei1pbmRleDogMDtcbn1cblxuLm92ZXJsYXljYW52YXMge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IDEwMDtcbn1cbiJdfQ== */\"","module.exports = \"\\n<div class=\\\"outerdiv\\\" #outerdiv>\\n  <canvas class=\\\"omcanvas\\\" #omcanvas   width=\\\"1\\\" height=\\\"1\\\"> </canvas>\\n</div>\\n\"","import { Component, ElementRef, OnInit, Input } from '@angular/core';\nimport { Renderer, ViewChild } from '@angular/core'\n\nimport { Observable, of } from 'rxjs';\nimport { map, tap, take, mergeMap, catchError, finalize } from 'rxjs/operators';\n\nimport { ActivatedRoute } from '@angular/router';\nimport { MovieService } from '../movie.service';\nimport { Stripe } from '../stripe';\nimport { Cut } from '../cut';\n\nimport { Store, select } from '@ngrx/store';\nimport { AppState } from '../app-state/app-state';\nimport { selectAllMovies, selectMovie, selectMoviesEntities } from '../entities/movie.selectors';\n\nimport { Movie } from '../entities/movie.model';\nimport { ConditionalExpr } from '@angular/compiler';\n\n\n@Component({\n  selector: 'app-omsubimage',\n  templateUrl: './omsubimage.component.html',\n  styleUrls: ['./omsubimage.component.css']\n})\n\n\nexport class OMSubimageComponent implements OnInit {\n\n  @Input() startFN: number;\n  @Input() endFN: number;\n  @Input() centerFN: number;\n\n  movies$ = this.store.pipe(select(selectMovie));\n  stripes: Stripe[];\n  cuts: Cut[];\n\n  mset = false;\n  cset = false;\n  sset = false;\n\n  mlocal: Movie;\n  aspectRatio = 1.0;\n\n  @ViewChild('outerdiv') outerdiv: ElementRef;\n\n  @ViewChild('omcanvas') omCanvas: ElementRef;\n  @ViewChild('overlayCanvas') overlayCanvas: ElementRef;\n\n  constructor(private renderer: Renderer,\n    private movieService: MovieService,\n    public store: Store<AppState>,\n    private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    const id = parseInt(this.route.snapshot.paramMap.get('id'));\n    this.store.pipe(\n      select(selectMovie),\n      map(f => f(id))\n    ).subscribe(m => this.setMovieParameters(m));\n\n    this.getStripes();\n    this.getCuts();\n  }\n\n  setMovieParameters(m: Movie) {\n    if (m) {\n      //      console.log('movie received');\n      this.mset = true;\n      this.mlocal = m;\n      this.aspectRatio = m.height / m.width;\n    }\n  }\n\n  drawOMSubImage() {\n\n    if (this.mset && this.cset && this.mset) {\n\n      const ctx: CanvasRenderingContext2D = this.omCanvas.nativeElement.getContext('2d');\n\n      const SMALLIMAGEWITH = 30;\n      const BIGIMAGEWITH = SMALLIMAGEWITH * 5;\n      const SMALLIMAGEHEIGHT = Math.round(SMALLIMAGEWITH * this.aspectRatio);\n      const BIGIMAGEHEIGTH = Math.round(BIGIMAGEWITH * this.aspectRatio);\n      const STRIPEHEIGHT = BIGIMAGEHEIGTH;\n\n      const HEIGHT = STRIPEHEIGHT + SMALLIMAGEHEIGHT + BIGIMAGEWITH;\n      const WIDTH = BIGIMAGEWITH;\n\n      this.renderer.setElementProperty(this.omCanvas.nativeElement, 'height', HEIGHT.toString());\n      this.renderer.setElementProperty(this.omCanvas.nativeElement, 'width', WIDTH.toString());\n      this.renderer.setElementProperty(this.outerdiv.nativeElement, 'height', HEIGHT.toString());\n      this.renderer.setElementProperty(this.outerdiv.nativeElement, 'width', WIDTH.toString());\n\n      ctx.strokeStyle = '#ff0000';\n      ctx.clearRect(0, 0, WIDTH, HEIGHT);\n      const i = 0;\n      ctx.rect(0, 0, WIDTH, BIGIMAGEHEIGTH);\n      ctx.rect(0, BIGIMAGEHEIGTH, WIDTH, SMALLIMAGEHEIGHT);\n      ctx.rect(0, BIGIMAGEHEIGTH + SMALLIMAGEHEIGHT, WIDTH, STRIPEHEIGHT);\n\n      for (let num = 0; num <= 4; num++) {\n        ctx.rect(num * SMALLIMAGEWITH, BIGIMAGEHEIGTH, SMALLIMAGEWITH, SMALLIMAGEHEIGHT);\n      }\n      ctx.stroke();\n\n      const startStripe = Math.floor(this.startFN / 1500);\n      const endStripe = Math.floor(this.endFN / 1500);\n      const sheight = this.mlocal.height;\n\n      if (startStripe === endStripe) {\n        // we only have one stripe\n        const xstart = this.startFN - startStripe * 1500;\n        const xend = this.endFN - endStripe * 1500;\n        const swidth = xend - xstart + 1;\n\n\n        if (this.stripes) {\n          //console.log (xstart, xend, swidth, sheight);\n          const s: Stripe = this.stripes[startStripe];\n          const stripeimage = new Image();\n          stripeimage.src = s.url;\n          stripeimage.onload = function () {\n            ctx.drawImage(stripeimage,\n              xstart, 0, swidth, sheight,\n              0, BIGIMAGEHEIGTH + SMALLIMAGEHEIGHT, BIGIMAGEWITH, STRIPEHEIGHT);\n          };\n        }\n      }\n      else {\n        const xstart2 = this.startFN - startStripe * 1500;\n        const xend2 = 1500;\n        const swidth2 = xend2 - xstart2 + 1;\n\n\n        if (this.stripes) {\n          // console.log (xstart, xend, swidth, sheight);\n          const s: Stripe = this.stripes[startStripe];\n          const stripeimage = new Image();\n          stripeimage.src = s.url;\n          stripeimage.onload = function () {\n            ctx.drawImage(stripeimage,\n              xstart2, 0, swidth2, sheight,\n              0, BIGIMAGEHEIGTH + SMALLIMAGEHEIGHT, BIGIMAGEWITH, STRIPEHEIGHT);\n          };\n        }\n        const xstart3 = 0;\n        const xend3 = this.endFN - endStripe * 1500;\n        const swidth3 = xend3 - xstart3 + 1;\n\n\n        if (this.stripes) {\n          // console.log (xstart, xend, swidth, sheight);\n          const s: Stripe = this.stripes[endStripe];\n          const stripeimage = new Image();\n          stripeimage.src = s.url;\n          stripeimage.onload = function () {\n            ctx.drawImage(stripeimage,\n              xstart3, 0, swidth3, sheight,\n              0, BIGIMAGEHEIGTH + SMALLIMAGEHEIGHT, BIGIMAGEWITH, STRIPEHEIGHT);\n          };\n        }\n\n\n\n\n      }\n    }\n  }\n\n  drawOverlay() {\n    const ctx: CanvasRenderingContext2D = this.overlayCanvas.nativeElement.getContext('2d');\n    ctx.strokeStyle = '#ff0000';\n  }\n\n  assignStripes(stripes): void {\n    this.stripes = stripes;\n    this.sset = true;\n    //      console.log(this.stripes );\n    this.drawOMSubImage();\n  }\n\n  assignCuts(cuts): void {\n    this.cset = true;\n    this.cuts = cuts;\n    //      console.log(\"cuts received\");\n    this.drawOMSubImage();\n  }\n\n  getStripes(): void {\n    const id = parseInt(this.route.snapshot.paramMap.get('id'));\n    this.movieService.getStripes(id)\n      .subscribe(stripes => this.assignStripes(stripes));\n  }\n\n  getCuts(): void {\n    const id = parseInt(this.route.snapshot.paramMap.get('id'));\n    this.movieService.getCuts(id)\n      .subscribe(cuts => this.assignCuts(cuts));\n  }\n}\n","import { ActionReducerMap } from '@ngrx/store';\n\nimport * as MovieReducers from '../entities/movie.reducer';\nimport * as MovieAPIReducers from '../entities/movies-api.reducer';\n\nexport const reducers: ActionReducerMap<any> = {\n    movies:   MovieReducers.reducer,\n    movieapi: MovieAPIReducers.reducer\n};\n","\nimport { Injectable, OnInit } from '@angular/core';\nimport { Observable, Observer, Subject, of, fromEvent } from 'rxjs';\n\n\n@Injectable({ providedIn: 'root'})\nexport class SseService implements OnInit {\n\n  private sseSource: EventSource;\n  public  sseEvent: Observable<MessageEvent>;\n\n  constructor() {\n    this.sseSource = new EventSource('/stream');\n  }\n\n  ngOnInit() {\n    this.sseEvent = this.getEvent();\n    this.sseEvent.subscribe (v => console.log(v))\n  }\n\n  getEvent(): Observable<MessageEvent> {\n    const observable: Observable<MessageEvent>  = new Observable(observer => {\n      const handler = (event) => observer.next(event);\n      this.sseSource.addEventListener('greeting', handler);\n      return () => this.sseSource.removeEventListener('greeting', handler);\n    });\n    return observable;\n  }\n\n}\n\n\n\n/*\n@Injectable({ providedIn: 'root'})\nexport class SseService {\n\n  constructor() { }\n\n  private subject: Subject<MessageEvent>;\n\n  public connect(url): Subject<MessageEvent> {\n    if (!this.subject) {\n      this.subject = this.create(url);\n      console.log('Successfully connected: ' + url);\n    }\n    return this.subject;\n  }\n\n  private create(url): Subject<MessageEvent> {\n    \n    const observable = new Observable(observer => {\n      const source = new EventSource(url);\n      const handler = (event) => observer.next(event);\n      source.addEventListener('greeting', handler);\n      return () => source.removeEventListener('greeting', handler);\n    });\n\n    console.log(observable);\n    return Subject.create(observable);\n  }\n\n}\n*/","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0cmlwZXMtb3ZlcmxheS9zdHJpcGVzLW92ZXJsYXkuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  stripes-overlay works!\\n</p>\\n<canvas #myCanvas width=\\\"500\\\" height=\\\"500\\\">\\n</canvas>\\n\"","import { Component, ElementRef, OnInit } from '@angular/core';\nimport { ViewChild } from '@angular/core'\n\n@Component({\n  selector: 'app-stripes-overlay',\n  templateUrl: './stripes-overlay.component.html',\n  styleUrls: ['./stripes-overlay.component.css']\n})\nexport class StripesOverlayComponent implements OnInit {\n\n  @ViewChild('myCanvas') canvasRef: ElementRef;\n\n  constructor() { }\n\n  ngOnInit() {\n    let ctx: CanvasRenderingContext2D =\n      this.canvasRef.nativeElement.getContext('2d');\n\n    // Clear any previous content.\n    ctx.clearRect(0, 0, 500, 500);\n\n    // Draw the clip path that will mask everything else\n    // that we'll draw later.\n    ctx.beginPath();\n    ctx.moveTo(250, 60);\n    ctx.lineTo(63.8, 126.4);\n    ctx.lineTo(92.2, 372.6);\n    ctx.lineTo(250, 460);\n    ctx.lineTo(407.8, 372.6);\n    ctx.lineTo(436.2, 126.4);\n    ctx.moveTo(250, 104.2);\n    ctx.lineTo(133.6, 365.2);\n    ctx.lineTo(177, 365.2);\n    ctx.lineTo(200.4, 306.8);\n    ctx.lineTo(299.2, 306.8);\n    ctx.lineTo(325.2, 365.2);\n    ctx.lineTo(362.6, 365.2);\n    ctx.lineTo(250, 104.2);\n    ctx.moveTo(304, 270.8);\n    ctx.lineTo(216, 270.8);\n    ctx.lineTo(250, 189);\n    ctx.lineTo(284, 270.8);\n    ctx.clip('evenodd');\n\n      // Draw 50,000 circles at random points\n    ctx.beginPath();\n    ctx.fillStyle = '#DD0031';\n    for (let i=0 ; i < 50000 ; i++) {\n     let x = Math.random() * 500;\n     let y = Math.random() * 500;\n     ctx.moveTo(x, y);\n     ctx.arc(x, y, 1, 0, Math.PI * 2);\n    }\n    ctx.fill();\n  }\n}\n","module.exports = \".outerdiv {\\n  position: relative;\\n}\\n\\n.overlaycanvas {\\n  position: absolute;\\n  z-index: 100;\\n}\\n\\n.stripeimagearray {\\n  position: absolute;\\n  z-index: 0;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc3RyaXBlcy9zdHJpcGVzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxtQkFBbUI7Q0FDcEI7O0FBRUQ7RUFDRSxtQkFBbUI7RUFDbkIsYUFBYTtDQUNkOztBQUVEO0VBQ0UsbUJBQW1CO0VBQ25CLFdBQVc7Q0FDWiIsImZpbGUiOiJzcmMvYXBwL3N0cmlwZXMvc3RyaXBlcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm91dGVyZGl2IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4ub3ZlcmxheWNhbnZhcyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogMTAwO1xufVxuXG4uc3RyaXBlaW1hZ2VhcnJheSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogMDtcbn1cbiJdfQ== */\"","module.exports = \"<div class=\\\"outerdiv\\\" width=\\\"800\\\">\\n\\n  <canvas class=\\\"stripeimagearray\\\" #imageCanvas   width=\\\"800\\\" height=\\\"10\\\">\\n  </canvas>\\n  <canvas class=\\\"overlaycanvas\\\"    #overlayCanvas width=\\\"800\\\" height=\\\"10\\\">\\n  </canvas>\\n\\n</div>\\n\"","import { Component, ElementRef, OnInit } from '@angular/core';\nimport { Renderer, ViewChild } from '@angular/core'\n\nimport { ActivatedRoute } from '@angular/router';\nimport { MovieService } from '../movie.service';\nimport { Stripe } from '../stripe';\nimport { Cut } from '../cut';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-stripes',\n  templateUrl: './stripes.component.html',\n  styleUrls: ['./stripes.component.css']\n})\n\n\nexport class StripesComponent implements OnInit {\n\n  stripes: Stripe[];\n  cuts:    Cut[];\n\n  @ViewChild('imageCanvas')   imageCanvas: ElementRef;\n  @ViewChild('overlayCanvas') overlayCanvas: ElementRef;\n\n  constructor(private renderer: Renderer, private movieService: MovieService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.getStripes();\n    this.getCuts();\n  }\n\n  drawImages () {\n   const ctx: CanvasRenderingContext2D = this.imageCanvas.nativeElement.getContext('2d');\n    ctx.clearRect(0, 0, 1500, 800);\n    let i = 0;\n    for (const s of this.stripes) {\n//         console.log (i, s)\n         const stripeimage = new Image();\n         stripeimage.src = s.url;\n         const y = i * 80;\n         stripeimage.onload = function () {  ctx.drawImage(stripeimage, 0, y, 800, 75) };\n         i = i + 1;\n    }\n  }\n\n  drawOverlay () {\n    const ctx: CanvasRenderingContext2D = this.overlayCanvas.nativeElement.getContext('2d');\n    ctx.strokeStyle = '#ff0000';\n    let i = 0;\n    for (let c of this.cuts) {\n      if (i > 0) {\n        let y = Math.floor(c.fn / 1500.0);\n        let x = 800 * (c.fn - y * 1500) / 1500\n        ctx.beginPath();\n        ctx.moveTo(x, y * 80-1);\n        ctx.lineTo(x, y * 80 + 75+1);\n        ctx.stroke();\n        //console.log(c.fn, x,y)\n      }\n      i += 1;\n    }\n  }\n\n  assignStripesAndDrawImages (stripes): void {\n      this.stripes = stripes\n      let h = this.stripes.length * 80\n      this.renderer.setElementProperty(this.imageCanvas.nativeElement, \"height\", h.toString());\n      this.drawImages()\n  }\n\n  assignCutsAndDrawOverlay (cuts): void {\n      this.cuts = cuts\n      //console.log (cuts)\n      let lastfn =  cuts[cuts.length-1].fn\n      let h = 80 * Math.ceil(lastfn / 1500.0)\n      this.renderer.setElementProperty(this.overlayCanvas.nativeElement, \"height\", h.toString());\n      this.drawOverlay()\n  }\n\n  getStripes(): void {\n    const id = parseInt(this.route.snapshot.paramMap.get('id'));\n    this.movieService.getStripes(id)\n        .subscribe(stripes => this.assignStripesAndDrawImages(stripes)  );\n  }\n\n  getCuts(): void {\n    const id = parseInt(this.route.snapshot.paramMap.get('id'));\n    this.movieService.getCuts(id)\n        .subscribe ( cuts => this.assignCutsAndDrawOverlay(cuts) );\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Observer, Subject, of } from 'rxjs';\nimport { filter, map, find, skip, take, tap, delay, mapTo, concat } from 'rxjs/operators';\n\nimport { AppState } from './app-state/app-state';\nimport { Store, select } from '@ngrx/store';\n\nimport * as MovieAPIActions from './entities/movies-api.actions';\nimport * as TasksAPIActions from './task/task-api.actions';\n\nimport { SseService } from './sse.service';\nimport { ConditionalExpr } from '@angular/compiler';\n\nconst webSockerUrl = 'ws:/127.0.0.1:8077/socket.io/';\n\nexport interface SyncOperation {\n  storeID: string;\n  operation: string;\n  payload: any;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class SyncstoreService {\n\n  public messages: Observable<SyncOperation>;\n\n  constructor(public   store: Store<AppState>,\n              sseServ: SseService) {\n    console.log('SyncstoreService make observable');\n\n    this.messages = sseServ.getEvent().pipe (\n      map ((response: MessageEvent): SyncOperation => {\n        const data = JSON.parse(response.data);\n        return {\n          storeID:      data.storeID,\n          operation:    data.operation,\n          payload:      data.payload\n              };\n          }\n      ));\n      this.messages.subscribe ( op  => this.dispatchSyncOperation(op) );\n    }\n\n  dispatchSyncOperation (op: SyncOperation) {\n  //  console.log (op);\n    switch (op.storeID) {\n      case 'MOVIE': {\n        this.dispatchMovieOperation(op);\n        break;\n      }\n      case 'TASK': {\n        this.dispatchTaskOperation(op);\n        break;\n      }\n      default: {\n          break;\n      }\n    }\n  }\n\n  dispatchMovieOperation (op: SyncOperation) {\n    switch (op.operation) {\n      case 'UPDATE': {\n        this.store.dispatch(new MovieAPIActions.SyncMovie ({movie: op.payload}));\n        break;\n      }\n      default: {\n          break;\n      }\n    }\n  }\n\n  dispatchTaskOperation (op: SyncOperation) {\n    switch (op.operation) {\n      case 'LOAD': {\n        console.log (\"****************** RELOAD TASKS\")\n        this.store.dispatch(new TasksAPIActions.LoadTasks ());\n        break;\n      }\n      case 'UPDATE': {\n        this.store.dispatch(new TasksAPIActions.SyncTask ({task: op.payload}));\n        break;\n      }\n      default: {\n          break;\n      }\n    }\n  }\n\n  \n\n\n}\n","import { Action } from '@ngrx/store';\nimport { Update } from '@ngrx/entity';\nimport { Task } from './task.model';\n\nexport enum TasksAPIActionTypes {\n  LoadTasks       = '[Tasks API] Load Tasks',\n  LoadTasksSucess = '[Tasks API] Load Tasks Success',\n  LoadTasksError  = '[Tasks API] Load Tasks Error',\n  AddTask         = '[Tasks API] Add Task',\n  AddTaskSucess   = '[Tasks API] Add Success',\n  AddTaskError    = '[Tasks API] Add Error',\n  SyncTask        = '[Tasks API] Sync Task'\n}\n\nexport class LoadTasks implements Action {\n  readonly type = TasksAPIActionTypes.LoadTasks;\n}\n\nexport class LoadTasksSucess implements Action {\n  readonly type = TasksAPIActionTypes.LoadTasksSucess;\n}\n\nexport class LoadTasksError implements Action {\n  readonly type = TasksAPIActionTypes.LoadTasksError;\n}\n\nexport class AddTask implements Action {\n  readonly type = TasksAPIActionTypes.AddTask;\n}\n\nexport class AddTaskSucess implements Action {\n  readonly type = TasksAPIActionTypes.AddTaskSucess;\n}\n\nexport class AddTaskError implements Action {\n  readonly type = TasksAPIActionTypes.AddTaskError;\n}\n\nexport class SyncTask implements Action {\n  readonly type = TasksAPIActionTypes.SyncTask;\n  constructor(public payload: { task: Update<Task> }) {}\n}\n\nexport type TasksAPIActions =\nLoadTasks\n  | LoadTasksSucess\n  | LoadTasksError\n  | AddTask\n  | AddTaskSucess\n  | AddTaskError\n  | SyncTask ;\n","import { Injectable } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { HttpClient} from '@angular/common/http';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { map, tap, mergeMap, catchError, finalize, concatMap } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\n\nimport { Task } from './task.model';\n\nimport * as TaskActions from './task.actions';\nimport * as TaskAPIActions from './task-api.actions';\n\n\nimport { AppState } from '../app-state/app-state';\n\n@Injectable()\nexport class TaskApiEffects {\n\n  private taskAPI = '/api/tasks';  // URL to web api\n\n  @Effect()\n  loadTasks$ = this.actions$\n  .pipe(\n    ofType(TaskAPIActions.TasksAPIActionTypes.LoadTasks),\n    mergeMap(() => this.http.get<Task[]>(this.taskAPI)\n      .pipe\n      (\n        map (tasks => (new TaskActions.LoadTasks ({tasks: tasks})) ),\n        catchError(() => of({ type: '[Task] Tasks Loaded Error' })),\n        finalize(() => this.store.dispatch(new TaskAPIActions.LoadTasksSucess ()))\n      )\n\n    )\n  );\n\n  @Effect()\n  syncTask$ = this.actions$\n  .pipe(\n    ofType<TaskAPIActions.SyncTask>(TaskAPIActions.TasksAPIActionTypes.SyncTask),\n//    tap (() => console.log('have to sync a task')),\n    concatMap( syncaction => [\n      new TaskActions.UpdateTask( {task: syncaction.payload.task} )\n    ])\n  );\n\n\n  constructor(\n    private  http: HttpClient,\n    private  actions$: Actions,\n    public   store: Store<AppState>\n  ) {\n  }\n}\n","import { Action } from '@ngrx/store';\nimport { TasksAPIActions, TasksAPIActionTypes } from './task-api.actions';\nimport { ConditionalExpr } from '@angular/compiler';\nimport { AppState} from '../app-state/app-state';\n\n\nexport interface State  {\n  pending: false;\n  error: null;\n}\n\nexport const initialState: State = {\n  pending: false,\n  error: null\n};\n\nexport function reducer(\n  state = initialState,\n  action: TasksAPIActions\n  ): State {\n  switch (action.type) {\n\n    case TasksAPIActionTypes.LoadTasks: {\n//      console.log ('TasksAPIActionTypes.LoadTasks');\n      return Object.assign({}, state, {pending: true, error: null});\n    }\n    case TasksAPIActionTypes.LoadTasksSucess: {\n//      console.log ('TasksAPIActionTypes.LoadTasksSucess');\n      return Object.assign({}, state, {pending: false});\n    }\n    case TasksAPIActionTypes.LoadTasksError: {\n      return Object.assign({}, state, {pending: false, error: 'ERROR'});\n    }\n\n    default:\n      return state;\n  }\n}\n","module.exports = \"table {\\n    width: 100%;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGFzay90YXNrLWxpc3QvdGFzay1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0dBQ2IiLCJmaWxlIjoic3JjL2FwcC90YXNrL3Rhc2stbGlzdC90YXNrLWxpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuICAiXX0= */\"","module.exports = \"<h3>Backgound Tasks on Server</h3>\\n\\n\\n<table mat-table [dataSource]=\\\"tasks$|async\\\" class=\\\"mat-elevation-z8\\\">\\n\\n  <!--- Note that these columns can be defined in any order.\\n        The actual rendered columns are set as a property on the row definition\\\" -->\\n\\n<ng-container matColumnDef=\\\"movieID\\\">\\n    <th mat-header-cell *matHeaderCellDef> ID </th>\\n      <td mat-cell *matCellDef=\\\"let t\\\"> \\n        <a routerLink=\\\"/detail/{{t.movieID}}\\\">  {{(movies$|async)(t.movieID).name}}  </a> \\n  </td>\\n  </ng-container>\\n\\n\\n  <ng-container matColumnDef=\\\"actionID\\\">\\n    <th mat-header-cell *matHeaderCellDef> command </th>\\n    <td mat-cell *matCellDef=\\\"let t\\\"> {{t.actionID}} </td>\\n  </ng-container>\\n\\n  \\n  <ng-container matColumnDef=\\\"state\\\">\\n    <th mat-header-cell *matHeaderCellDef> state </th>\\n    <td mat-cell *matCellDef=\\\"let t\\\"> {{t.state}} </td>\\n  </ng-container>\\n\\n\\n  <ng-container matColumnDef=\\\"progress\\\">\\n    <th mat-header-cell *matHeaderCellDef> progress </th>\\n      <td mat-cell *matCellDef=\\\"let t\\\"> \\n        {{t.progress}} &#37; \\n  </td>\\n  </ng-container>\\n\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n</table>\"","import { Component, OnInit } from '@angular/core';\n\n\nimport { Store, select } from '@ngrx/store';\nimport { AppState } from '../../app-state/app-state';\n\nimport { selectAllTasks } from '../task.selectors';\nimport { selectAllMovies, selectMovie, selectMoviesEntities } from '../../entities/movie.selectors';\n\n\n\n@Component({\n  selector: 'task-list',\n  templateUrl: './task-list.component.html',\n  styleUrls: ['./task-list.component.css']\n})\nexport class TaskListComponent implements OnInit {\n\n  tasks$: any  = this.store.pipe(select(selectAllTasks));\n  movies$ = this.store.pipe(select(selectMovie));\n\n  displayedColumns: string[] = ['movieID', 'actionID', 'state', 'progress'];\n\n  constructor( private  store: Store<AppState> ) { }\n\n  ngOnInit() {\n  //  this.tasks$.subscribe (v => console.log(v));\n  }\n\n}\n","import { Action } from '@ngrx/store';\nimport { Update } from '@ngrx/entity';\nimport { Task } from './task.model';\n\nexport enum TaskActionTypes {\n  LoadTasks = '[Task] Load Tasks',\n  AddTask = '[Task] Add Task',\n  UpsertTask = '[Task] Upsert Task',\n  AddTasks = '[Task] Add Tasks',\n  UpsertTasks = '[Task] Upsert Tasks',\n  UpdateTask = '[Task] Update Task',\n  UpdateTasks = '[Task] Update Tasks',\n  DeleteTask = '[Task] Delete Task',\n  DeleteTasks = '[Task] Delete Tasks',\n  ClearTasks = '[Task] Clear Tasks'\n}\n\nexport class LoadTasks implements Action {\n  readonly type = TaskActionTypes.LoadTasks;\n\n  constructor(public payload: { tasks: Task[] }) {}\n}\n\nexport class AddTask implements Action {\n  readonly type = TaskActionTypes.AddTask;\n\n  constructor(public payload: { task: Task }) {}\n}\n\nexport class UpsertTask implements Action {\n  readonly type = TaskActionTypes.UpsertTask;\n\n  constructor(public payload: { task: Task }) {}\n}\n\nexport class AddTasks implements Action {\n  readonly type = TaskActionTypes.AddTasks;\n\n  constructor(public payload: { tasks: Task[] }) {}\n}\n\nexport class UpsertTasks implements Action {\n  readonly type = TaskActionTypes.UpsertTasks;\n\n  constructor(public payload: { tasks: Task[] }) {}\n}\n\nexport class UpdateTask implements Action {\n  readonly type = TaskActionTypes.UpdateTask;\n\n  constructor(public payload: { task: Update<Task> }) {}\n}\n\nexport class UpdateTasks implements Action {\n  readonly type = TaskActionTypes.UpdateTasks;\n\n  constructor(public payload: { tasks: Update<Task>[] }) {}\n}\n\nexport class DeleteTask implements Action {\n  readonly type = TaskActionTypes.DeleteTask;\n\n  constructor(public payload: { id: string }) {}\n}\n\nexport class DeleteTasks implements Action {\n  readonly type = TaskActionTypes.DeleteTasks;\n\n  constructor(public payload: { ids: string[] }) {}\n}\n\nexport class ClearTasks implements Action {\n  readonly type = TaskActionTypes.ClearTasks;\n}\n\nexport type TaskActions =\n LoadTasks\n | AddTask\n | UpsertTask\n | AddTasks\n | UpsertTasks\n | UpdateTask\n | UpdateTasks\n | DeleteTask\n | DeleteTasks\n | ClearTasks;\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n\nimport * as fromTask from './task.state';\nimport { TaskApiEffects } from './task-api.effects';\nimport { TaskListComponent } from './task-list/task-list.component';\n\n// MATERIAL\nimport {MatTableModule} from '@angular/material/table';\nimport { RouterModule } from '@angular/router';\n\n// TASKS\n@NgModule({\n  declarations: [\n  TaskListComponent],\n\n  imports: [\n    CommonModule,\n    MatTableModule,\n    RouterModule,\n    EffectsModule.forFeature([TaskApiEffects]),\n    StoreModule.forFeature('task', fromTask.taskreducers)\n    ],\n\n    exports: [ MatTableModule ],\n})\n\n\nexport class TaskModule {\n}\n","import { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\nimport { Task } from './task.model';\nimport { TaskActions, TaskActionTypes } from './task.actions';\n\nexport interface State extends EntityState<Task> {\n  api_pending: boolean;\n  api_sucess: boolean;\n  // additional entities state properties\n}\n\nfunction sortByMovieID(e1: Task, e2: Task) {\n  if (e1.movieID === e2.movieID) {\n    return (e1.progress - e2.progress);\n  } else {\n    return (e1.movieID - e2.movieID);\n  }\n}\n\n\n\nexport const adapter: EntityAdapter<Task> = createEntityAdapter<Task>(\n  {\n    sortComparer: sortByMovieID\n  }\n);\n\nexport const initialState: State = adapter.getInitialState({\n  api_pending: false,\n  api_sucess: false\n  // additional entity state properties\n});\n\nexport function reducer(\n  state = initialState,\n  action: TaskActions\n): State {\n  switch (action.type) {\n    case TaskActionTypes.AddTask: {\n      return adapter.addOne(action.payload.task, state);\n    }\n\n    case TaskActionTypes.UpsertTask: {\n      return adapter.upsertOne(action.payload.task, state);\n    }\n\n    case TaskActionTypes.AddTasks: {\n      return adapter.addMany(action.payload.tasks, state);\n    }\n\n    case TaskActionTypes.UpsertTasks: {\n      return adapter.upsertMany(action.payload.tasks, state);\n    }\n\n    case TaskActionTypes.UpdateTask: {\n      return adapter.updateOne(action.payload.task, state);\n    }\n\n    case TaskActionTypes.UpdateTasks: {\n      return adapter.updateMany(action.payload.tasks, state);\n    }\n\n    case TaskActionTypes.DeleteTask: {\n      return adapter.removeOne(action.payload.id, state);\n    }\n\n    case TaskActionTypes.DeleteTasks: {\n      return adapter.removeMany(action.payload.ids, state);\n    }\n\n    case TaskActionTypes.LoadTasks: {\n      return adapter.addAll(action.payload.tasks, state);\n    }\n\n    case TaskActionTypes.ClearTasks: {\n      return adapter.removeAll(state);\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n\nexport const {\n  selectIds,\n  selectEntities,\n  selectAll,\n  selectTotal,\n} = adapter.getSelectors();\n","import { createSelector } from '@ngrx/store';\nimport { adapter } from './task.reducer';\nimport { Task} from './task.model';\nimport { AppState} from '../app-state/app-state';\n\nconst { selectEntities, selectAll } = adapter.getSelectors();\n\n\nexport const selectTaskState = (state: AppState) => state.task.tasks;\n\nexport const selectAllTasks  = createSelector(\n  selectTaskState,\n  selectAll);\n\n  export const selectTasksEntities = createSelector(\n    selectTaskState,\n    selectEntities);\n","import { ActionReducerMap } from '@ngrx/store';\n\nimport * as TaskReducers from './task.reducer';\nimport * as TaskAPIReducers from './task-api.reducer';\nimport { AppState } from '../app-state/app-state';\n\n\nexport interface AppState extends AppState  {\n    task: any;\n  }\n\nexport const taskreducers: ActionReducerMap<any> = {\n    tasks:    TaskReducers.reducer,\n    tasksapi: TaskAPIReducers.reducer\n};\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"],"sourceRoot":""}