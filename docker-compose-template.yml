version: '2'

networks:
    bibbox-default-network:
      external: true

services:

# Run docker-compose build
# Run docker-compose up
# Live long and prosper

version: '2'

services:

  §§INSTANCE-movie-analyzer-nginx:
    container_name: §§INSTANCE-movie-analyzer-nginx
    restart: unless-stopped
    networks:
      - bibbox-default-network
    image: nginx
    build:
      context:    ./nginx
      dockerfile: Dockerfile
    volumes:
     - ./client/dist:/usr/share/nginx/html
     - ./data/movies:/usr/share/nginx/html/static
    ports:
      - "§§PORT-MAINAPP:80"
    depends_on:
      - §§INSTANCE-movie-analyzer-flask

  §§INSTANCE-movie-analyzer-flask:
    container_name: §§INSTANCE-movie-analyzer-flask
    restart: unless-stopped
    networks:
      - bibbox-default-network
    links:
        - §§INSTANCE-movie-analyzer-postgres:postgres
        - §§INSTANCE-movie-analyzer-redis:redis
        - §§INSTANCE-movie-analyzer-celery:celery
    build:
      context:    ./server
      dockerfile: Dockerfile
    depends_on:
      - §§INSTANCE-movie-analyzer-postgres
    volumes_from:
     - §§INSTANCE-movie-analyzer-data
    env_file:
     - .env

  §§INSTANCE-movie-analyzer-postgres:
      container_name: §§INSTANCE-movie-analyzer-postgres
      restart: unless-stopped
      networks:
        - bibbox-default-network
      build:
        context:   ./postgresql
        dockerfile: Dockerfile
      env_file:
        - .env

  §§INSTANCE-movie-analyzer-adminer:
    image: adminer
    restart: unless-stopped
    networks:
      - bibbox-default-network
    container_name: §§INSTANCE-movie-analyzer-adminer
    links:
      - §§INSTANCE-movie-analyzer-postgres:db
    depends_on:
      - §§INSTANCE-movie-analyzer-postgres
    ports:
      - "§§PORT-ADMINER:8080"

  §§INSTANCE-movie-analyzer-celery:
    container_name: §§INSTANCE-movie-analyzer-celery
    restart: unless-stopped
    networks:
      - bibbox-default-network
    links:
        - §§INSTANCE-movie-analyzer-postgres:postgres
        - §§INSTANCE-movie-analyzer-redis:redis
    build:
      context:    ./server
      dockerfile: Dockerfile
    command: "celery worker  -A celery_worker.app_celerey --loglevel=info"
    user: nobody
    depends_on:
      - §§INSTANCE-movie-analyzer-postgres
    volumes_from:
        - §§INSTANCE-movie-analyzer-data
    env_file:
      - .env

  §§INSTANCE-movie-analyzer-celery-monitor:
    container_name: §§INSTANCE-movie-analyzer-celery-monitor
    build:
      context:    ./server
      dockerfile: Dockerfile
    restart: unless-stopped
    networks:
      - bibbox-default-network
    ports:
     - "§§PORT-CELERY-MONITOR:5555"
    links:
     - §§INSTANCE-movie-analyzer-redis:redis
    volumes_from:
     - §§INSTANCE-movie-analyzer-data
    entrypoint: flower
    command:  -celery A celery_worker.app_celerey --port=5555 --broker=redis://redis:6379/0
    depends_on:
      - §§INSTANCE-movie-analyzer-redis

  §§INSTANCE-movie-analyzer-redis:
    container_name: bibbox-movie-analyzer-redis
    image: redis
    restart: unless-stopped
    networks:
      - bibbox-default-network

  §§INSTANCE-movie-analyzer-data:
    image: busybox
    container_name: §§INSTANCE-movie-analyzer-data
    networks:
      - bibbox-default-network
    volumes:
      - ./data/postgresql/data:/var/lib/postgresql/data
      - ./data/movies:/data/movies
      - ./server:/usr/src/movieannotator/server
      - ./data/celery:/queue
